{"version":3,"sources":["pages/Home.js","pages/HeaderBar.js","autotator-logo.png","annotation_interface_line.png","cal_contrib.png","task.png"],"names":["theme","global","colors","brand","font","family","size","height","breakpoints","paragraph","heading","Home","state","notice","full","Consumer","fill","align","style","direction","flex","justify","margin","level","overflow","background","pad","onEsc","setState","onClickOutside","width","gap","as","top","bottom","color","alignSelf","icon","kakaotalkIcon","label","onClick","window","open","rows","columns","areas","name","start","end","gridArea","fit","src","HomeImage","wrap","title","frameborder","allowFullScreen","allow","alignContent","taskImage","contrib","Component","withRouter","HeaderBar","param","location","href","AppBar","AutotatorIcon","props","tag","left","right","vertical","elevation","zIndex","module","exports"],"mappings":"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","file":"static/js/7.2bb6d747.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Box, Button, Heading, Grommet, ResponsiveContext, Grid, Image, Paragraph, Layer } from 'grommet';\nimport { Gamepad, Edit, LinkNext, Chrome } from 'grommet-icons';\nimport { withRouter } from 'react-router-dom';\nimport HeaderBar from './HeaderBar';\nimport HomeImage from '../annotation_interface_line.png'\nimport contrib from '../cal_contrib.png'\nimport taskImage from '../task.png'\nimport { Icon } from '@iconify/react'\nimport kakaotalkIcon from '@iconify/icons-vs/kakaotalk'\n\nconst theme = {\n  global: {\n    colors: {\n      brand: '#333333'\n    },\n    font: {\n      family: \"'-apple-system', 'BlinkMacSystemFont', 'Roboto', 'Noto Sans KR'\",\n      size: '16px',\n      height: '20px',\n    },\n    breakpoints: {\n      \"small\": {\n        \"value\": 1365\n      }\n    }\n  },\n  paragraph: {\n    \"medium\": {\n      \"size\": \"16px\",\n      \"height\": \"18px\",\n      \"maxWidth\": \"432px\"\n    }\n  },\n  heading: {\n    \"level\": {\n      \"5\": {\n        \"font\": {},\n        \"medium\": {\n          \"size\": \"16px\",\n          \"height\": \"22px\",\n          \"maxWidth\": \"1000px\"\n        }\n      }\n    }\n  }\n};\n\n\n\n//   <script type='text/javascript'>{`\n//   //<![CDATA[\n//     // 사용할 앱의 JavaScript 키를 설정해 주세요.\n//     Kakao.init('97fceaba7ceede1608f2147adf0d3184');\n//     // 카카오톡 채널 추가 버튼을 생성합니다.\n//     Kakao.Channel.createAddChannelButton({\n//       container: '#kakao-add-channel-button',\n//       channelPublicId: '_xcxczjxb' // 채널 홈 URL에 명시된 id로 설정합니다.\n//     });\n//   //]]>\n//   `}\n// </script>\n\n\nclass Home extends Component {\n  state = {\n    notice: true\n  }\n\n  render() {\n    return (\n      <Grommet theme={theme} full>\n        <ResponsiveContext.Consumer>\n          {size => (\n            (size === \"small\") ? (\n              <Box fill align=\"center\">\n                <Box style={{ \"position\": \"fixed\", \"top\": 0, \"left\": 0, \"right\": 0 }}><HeaderBar /></Box>\n                <Box direction='row' flex>\n                  <Box align='center' justify='center' margin='small'>\n                    <Heading level='2'>데스크탑에서 전체화면으로 실행해 주세요</Heading>\n                    <Heading level='4'>Autotator는 가로 1366px 이상을 지원합니다.</Heading>\n                  </Box>\n                </Box>\n              </Box>\n            ) :\n              (\n\n                <Box>\n                  <Box style={{ \"position\": \"fixed\", \"top\": 0, \"left\": 0, \"right\": 0 }}><HeaderBar /></Box>\n                  <Box flex direction=\"column\" overflow='scroll'>\n                    <Box flex direction='row' margin=\"medium\" background='white'>\n\n                      <Box flex align='center' justify='center' margin=\"medium\" pad={{ \"top\": '50px', \"bottom\": '30px', \"left\": '30px', \"right\": \"30px\" }}>\n\n                        {/* {size !== 'small' && (\n                  <Collapsible direction=\"horizontal\" open={this.state.showSidebar}>\n                    <Box\n                      flex\n                      width='medium'\n                      background='light-2'\n                      elevation='small'\n                      align='center'\n                      justify='center'\n                    >\n                      sidebar\n                </Box>\n                  </Collapsible>\n                )} */}\n\n                        {this.state.notice && (\n                        <Layer\n                        onEsc={() => this.setState({notice: false})}\n                        onClickOutside={() => this.setState({notice: false})}\n                        width=\"500px\"\n                      >\n                          <Box pad=\"medium\" gap=\"small\" width=\"large\">\n                          <Heading level=\"3\" margin=\"none\">공지</Heading>\n                          <Heading level=\"5\" margin=\"none\">\n                        Autotator 크라우드 소싱 실험이 종료되었습니다.<br/>\n                        <br/>\n                        3월 26일 이후 참여비는 4월 3일 일괄 지급 예정입니다.<br/>\n                        기타 궁금하신 점은 카카오톡으로 문의 주십시오.<br/><br/>\n                      </Heading>\n                          <Box\n                        as=\"footer\"\n                        gap=\"small\"\n                        direction=\"row\"\n                        align=\"center\"\n                        justify=\"end\"\n                        pad={{ top: \"medium\", bottom: \"small\" }}\n                      >\n                        <Button style={{ \"background-color\": \"#ffe812\" }} color=\"#ffe812\" alignSelf=\"end\" icon={<Icon icon={kakaotalkIcon} />} label=\"문의\" onClick={() => window.open('http://pf.kakao.com/_xcxczjxb', '_blank')} />\n                        <Button color=\"red\" label=\"close\" onClick={() => this.setState({notice: false})} />\n                        </Box>\n                        </Box>\n                      </Layer>\n                    )}\n\n                        <Grid rows={['medium']}\n                          columns={['37%', '63%']}\n                          gap=\"small\"\n                          areas={[\n                            { name: 'nav', start: [0, 0], end: [0, 0] },\n                            { name: 'main', start: [1, 0], end: [1, 0] },\n                          ]}\n                          fill=\"horizontal\"\n                        >\n                          <Box gridArea=\"nav\" background=\"white\">\n                            <Image\n                              fit=\"contain\" src={HomeImage}\n                            />\n                          </Box>\n                          <Box flex gridArea=\"main\" background=\"white\" margin=\"medium\" wrap>\n                            <Box flex align='center' justify='center'>\n                              <Heading level=\"2\" alignSelf=\"start\" margin={{ top: \"small\", bottom: \"none\" }}>Autotator Tutorial</Heading>\n                              <Heading level=\"4\" alignSelf=\"start\" margin={{ top: \"xsmall\", bottom: \"none\" }}>실험 종료</Heading>\n                              <Paragraph justify=\"center\" fill={true} alignSelf=\"start\" margin={{ top: \"small\", bottom: \"xsmall\" }}>반자동 차트 어노테이션 시스템 Autotator의 Crowdsourcing 연구 튜토리얼 페이지입니다.</Paragraph>\n                              <Paragraph justify=\"center\" fill={true} alignSelf=\"start\" margin={{ top: \"small\", bottom: \"xsmall\" }}>아래에서 튜토리얼 영상을 확인하신 후,<br />제시된 퀴즈 이미지를 성공적으로 어노테이션 하면 연구에 참여하실 수 있습니다.</Paragraph>\n                              <Paragraph justify=\"center\" fill={true} alignSelf=\"start\" margin={{ top: \"small\", bottom: \"xsmall\" }}>데모 사이트를 이용하여 기능을 체험해 보실 수 있습니다.<br /><br />연구용 시스템이기 때문에 오류나 버그가 있을 수 있습니다.<br />해당 버그 및 이슈 리포트 및 궁금하신 점은 카카오톡 채널로 알려 주십시오.</Paragraph>\n                              <Paragraph justify=\"center\" fill={true} alignSelf=\"start\" margin={{ top: \"small\", bottom: \"xsmall\" }}>Chrome<Chrome style={{ \"height\": '15px' }} pad=\"small\" />에 최적화되어있으며 가로 1366px 이상 디스플레이를 지원합니다.<br />원활한 작업을 위하여 마우스 사용을 필수로 하고 있습니다.<br />자동완성 기능은 머신러닝으로 학습되므로 시간이 지날수록 성능이 향상됩니다.</Paragraph>\n                              <Box flex alignSelf=\"end\" margin={{bottom: 'medium'}}>\n                                <Box\n                                  as=\"footer\"\n                                  gap=\"large\"\n                                  direction=\"column\"\n                                  align=\"end\"\n                                  alignSelf=\"end\"\n                                >\n                                  <Box direction=\"row\" gap=\"small\" wrap>\n                                    <Button alignSelf=\"end\" icon={<Gamepad size=\"medium\" />} label=\"Demo\" onClick={() => this.setState({notice: true})} />\n                                    <Button alignSelf=\"end\" icon={<Edit size=\"medium\"/>} label=\"Quiz\" onClick={() => this.setState({notice: true})} />\n                                    {/* <Button alignSelf=\"end\" icon={<Edit size=\"medium\" />} label=\"Quiz\" onClick={() => this.setState({ notice: true })} /> */}\n                                  </Box>\n                                  <Box direction=\"row\" gap=\"small\" wrap>\n                                    <Button style={{ \"background-color\": \"#ffe812\" }} color=\"#ffe812\" alignSelf=\"end\" icon={<Icon icon={kakaotalkIcon} />} label=\"문의\" onClick={() => window.open('http://pf.kakao.com/_xcxczjxb', '_blank')} />\n                                    <Button style={{ \"color\": \"#FFFFFF\", \"background-color\": \"#F0633C\" }} color=\"#f0633c\" alignSelf=\"end\" icon={<LinkNext size=\"medium\" color=\"white\" />} label=\"Autotator 실행\" onClick={() => this.setState({notice: true})} />\n                                  </Box>\n                                </Box>\n                              </Box>\n                            </Box>\n                          </Box>\n                        </Grid>\n                      </Box>\n                    </Box>\n                    <Box align='center' justify='center' background=\"light-1\">\n                      <Box align='center' justify='center'>\n                        <Heading level=\"3\" alignSelf=\"start\">교육 자료 영상</Heading>\n                        <Box direction='row' justify='center' gap='medium'>\n                          <Box direction='column' justify='center'>\n                            <iframe title='video' width=\"341\" height=\"192\" src=\"https://www.youtube.com/embed/lGOrOK6g4u8\" frameborder=\"0\" allowFullScreen=\"allowFullScreen\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n                            <Heading level='5' alignSelf='center' margin='small'> 튜토리얼 영상 (필수 시청) </Heading>\n                          </Box>\n                          <Box direction='column' justify='center'>\n                            <iframe title='video' width=\"341\" height=\"192\" src=\"https://www.youtube.com/embed/iZ7lubNUsbE\" frameborder=\"0\" allowFullScreen=\"allowFullScreen\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n                            <Heading level='5' alignSelf='center' margin='small'> 라인 차트 추가 작업 튜토리얼 1 (연속적인 선) </Heading>\n                          </Box>\n                          <Box direction='column' justify='center'>\n                            <iframe title='video' width=\"341\" height=\"192\" src=\"https://www.youtube.com/embed/lBUDVVCAJkM\" frameborder=\"0\" allowFullScreen=\"allowFullScreen\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n                            <Heading level='5' alignSelf='center' margin='small'> 라인 차트 추가 작업 튜토리얼 2 </Heading>\n                          </Box>\n                        </Box>\n                      </Box>\n                      <Box flex align='center' alignContent='stretch'>\n                        <Heading level='5'> Bar Chart 실험에 참여하신 분께서는 필수 튜토리얼 영상은 다시 시청할 필요 없이 퀴즈를 보실 수 있습니다. </Heading>\n                      </Box>\n                      {/* <Box margin=\"medium\" direction=\"row\"> */}\n                      {/* <Box direction=\"column\" margin=\"medium\" gap=\"small\"> */}\n                      {/* <Box ><Button icon={<Youtube/>} label=\"보충 설명 영상 (마크 라벨이 사용자 정의 열을 형성할 경우)\" onClick={() => window.open('http://www.youtube.com/watch?v=VHEmYM4lpVs', '_blank')}/></Box> */}\n                      {/* <Box ><Anchor icon={<Youtube />} label=\"추가 영상 자료2\" onClick={() => alert(\"추후 추가 예정\")}/></Box>\n                  </Box>\n                  <Box direction=\"column\" margin=\"medium\" gap=\"small\">\n                    <Box ><Anchor icon={<Youtube />} label=\"추가 영상 자료3\" onClick={() => alert(\"추후 추가 예정\")}/></Box>\n                    <Box ><Anchor icon={<Youtube />} label=\"추가 영상 자료4\" onClick={() => alert(\"추후 추가 예정\")}/></Box> */}\n                      {/* </Box> */}\n                      {/* </Box> */}\n                    </Box>\n\n                    <Box pad=\"medium\" alignSelf='center' style={{ width: '1024px' }}>\n                      <Heading level=\"3\" alignSelf=\"start\" color=\"dark-1\">수행작업</Heading>\n                      <Image\n                        src={taskImage}\n                        alignSelf=\"start\"\n                        fit=\"cover\"\n                        fill\n                      />\n                    </Box>\n                    <Box pad=\"medium\" alignSelf='center' style={{ width: '1024px' }}>\n                      <Heading level=\"3\" alignSelf=\"start\" color=\"dark-1\">기여도 산정 방식</Heading>\n                      <Image\n                        src={contrib}\n                        alignSelf=\"start\"\n                        fit=\"cover\"\n                        fill\n                      />\n                    </Box>\n                    <Box pad=\"medium\" alignSelf='center' style={{ width: '1024px' }}>\n                      <Heading level=\"3\" alignSelf=\"start\" color=\"dark-1\">어노테이션 시 주의할 점</Heading>\n                      <Box style={{ height: '80vh' }}><iframe style={{ height: \"100%\" }} title=\"docs\" src=\"https://docs.google.com/document/d/e/2PACX-1vRyKQwIPVP4EGeqosdtkOLduxojX766c0LUdSZ5Al78VyKL7WU4DkMnUfkKN_1PHBjQD8SgieaB1SKu/pub?embedded=true\">\n                      </iframe></Box>\n\n                    </Box>\n                  </Box>\n                </Box>\n              ))}\n        </ResponsiveContext.Consumer>\n\n      </Grommet>\n    );\n  }\n}\n\n\n\n\nexport default withRouter(Home);","import React, {Component} from 'react';\nimport {Grommet, Box, Heading, Nav, Anchor, Button, Image} from 'grommet';\nimport {Home, CirclePlay, Edit, CircleInformation } from 'grommet-icons';\nimport AutotatorIcon from '../autotator-logo.png'\n\nconst theme = {\n    global: {\n      colors: {\n        brand: '#3F51B5'\n      },\n      font: {\n        family: \"'-apple-system', 'BlinkMacSystemFont', 'Roboto'\",\n        size: '16px',\n        height: '20px',\n      },\n      breakpoints: {\n        \"small\": {\n          \"value\": 1335\n        }\n      }\n    },\n  };\n\nclass HeaderBar extends Component{\n    onClick = (param) => {\n        window.location.href = param;\n    }\n\n    render() {\n        return(\n            <AppBar>\n              <Image\n                style={{\"height\": '24px', \"width\": '24px'}}\n                src={AutotatorIcon}\n                alignSelf=\"start\"\n                margin={{\"right\": \"small\"}}\n              />\n                <Anchor onClick={() => this.onClick('/')} color=\"white\"><Heading level='4' margin='none' alignSelf=\"start\">Autotator Tutorial</Heading></Anchor>\n                {/* <Button\n                  icon={<Notification />}\n                  onClick={() => this.setState({showSidebar: !this.state.showSidebar})}\n                /> */}\n                {/* <Nav direction=\"row\" margin={{right: 'small'}}> */}\n                    {/* <Anchor icon={<Home />} label=\"Home\" hoverIndicator onClick={() => this.onClick('/')} color=\"light-1\"/>\n                    <Anchor icon={<CirclePlay />} label=\"Video\" hoverIndicator onClick={() => this.onClick('/video')} color=\"light-1\"/> */}\n                    {/* <Anchor icon={<Edit />} label=\"Quiz\" hoverIndicator onClick={() => this.onClick('/quiz')} color=\"light-1\"/> */}\n                    {/* <Anchor icon={<CircleInformation />}label=\"Info\" hoverIndicator onClick={() => this.onClick('/info')} color=\"light-1\"/> */}\n                {/* </Nav> */}\n              </AppBar>\n        );\n    }\n}\n\nconst AppBar = (props) => (\n    <Box\n        tag='header'\n        direction='row'\n        align='center'\n        justify='start'\n        background='brand'\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n        elevation='medium'\n        style={{ zIndex: '100' }}\n        {...props}\n    />\n);\n\nexport default HeaderBar;","module.exports = __webpack_public_path__ + \"static/media/autotator-logo.24876c91.png\";","module.exports = __webpack_public_path__ + \"static/media/annotation_interface_line.9a955dfa.png\";","module.exports = __webpack_public_path__ + \"static/media/cal_contrib.23e5ecf9.png\";","module.exports = __webpack_public_path__ + \"static/media/task.6d182551.png\";"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/area.service.ts","webpack:///./src/app/constants.ts","webpack:///./src/app/course-node.ts","webpack:///./src/app/d3.service.ts","webpack:///./src/app/detail-panel/detail-panel.component.css","webpack:///./src/app/detail-panel/detail-panel.component.html","webpack:///./src/app/detail-panel/detail-panel.component.ts","webpack:///./src/app/edu-side-panel/edu-side-panel.component.css","webpack:///./src/app/edu-side-panel/edu-side-panel.component.html","webpack:///./src/app/edu-side-panel/edu-side-panel.component.ts","webpack:///./src/app/edu-structure.service.ts","webpack:///./src/app/graph/course-link.ts","webpack:///./src/app/graph/layer.ts","webpack:///./src/app/graph/layout-manager.ts","webpack:///./src/app/graph/rect.ts","webpack:///./src/app/main-graph/main-graph.component.css","webpack:///./src/app/main-graph/main-graph.component.html","webpack:///./src/app/main-graph/main-graph.component.ts","webpack:///./src/app/major-info.ts","webpack:///./src/app/map-view/map-view.component.css","webpack:///./src/app/map-view/map-view.component.html","webpack:///./src/app/map-view/map-view.component.ts","webpack:///./src/app/recommend-result.ts","webpack:///./src/app/recommend.service.ts","webpack:///./src/app/user-data.ts","webpack:///./src/app/user-modal/user-modal.component.css","webpack:///./src/app/user-modal/user-modal.component.html","webpack:///./src/app/user-modal/user-modal.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,sBAAsB,sBAAsB,GAAG,WAAW,gBAAgB,qBAAqB,GAAG,oBAAoB,gBAAgB,sBAAsB,GAAG,sBAAsB,gBAAgB,eAAe,kBAAkB,qBAAqB,kBAAkB,8BAA8B,uBAAuB,GAAG,gBAAgB,gBAAgB,kBAAkB,GAAG,eAAe,gBAAgB,GAAG,C;;;;;;;;;;;ACA5Z,qkC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAIK;AACd;AAQzC;IAUE,sBAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QARtD,qBAAgB,GAAsB,IAAI,CAAC;QAC3C,2BAAsB,GAAoB,IAAI,CAAC;QAC/C,iBAAY,GAAG,KAAK,CAAC;QACrB,eAAU,GAAgB,CAAC,qDAAS,CAAC,IAAI,CAAC,CAAC;QAE3C,gBAAW,GAAiB,EAAE,CAAC;IAI/B,CAAC;IAED,+BAAQ,GAAR;IAEA,CAAC;IAED,oCAAa,GAAb,UAAc,QAAkB;QAC9B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QAC3E,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,yCAAkB,GAAlB,UAAmB,UAAsB;QACvC,gBAAgB;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,aAAa;YACb,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;gBACjG,UAAU;YACV,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,UAAU,GAAG,CAAC,qDAAS,CAAC,IAAI,CAAC,CAAC;gBACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;YAChH,CAAC;YACD,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;YAEvC,cAAc;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;QACvC,CAAC;IACH,CAAC;IAED,qCAAc,GAAd,UAAe,KAAa;QAC1B,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IAED,uCAAgB,GAAhB,UAAiB,YAAqB;QACpC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,sCAAe,GAAf,UAAgB,SAAoB;QAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAChH,CAAC;IArDU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAWsC,mEAAgB;OAV3C,YAAY,CAuDxB;IAAD,mBAAC;CAAA;AAvDwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbiC;AACqB;AACtC;AACc;AACV;AAEE;AACwB;AACW;AACX;AACM;AACZ;AAoBjE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,mFAAkB;gBAClB,8FAAqB;gBACrB,mFAAkB;gBAClB,yFAAoB;gBACpB,8EAAgB;aACjB;YACD,OAAO,EAAE;gBACP,oEAAS,CAAC,OAAO,EAAE;gBACnB,uEAAa;gBACb,4FAAuB;gBACvB,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BqB;AACJ;AAKvC;IAmBE;QAjBA,UAAK,GAAa;YAChB,QAAQ;YACR,SAAS;YACT,eAAe;YACf,KAAK;SACN,CAAC;QAEF,YAAO,GAAa;YAClB,EAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAC;YACxB,EAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAC;YACvB,EAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAC;YACxB,EAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAC;SACzB;QAEO,eAAU,GAAG,IAAI,oDAAe,CAAS,QAAQ,CAAC,CAAC;QAC3D,mBAAc,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAChD,gBAAW,GAAG,QAAQ,CAAC;IAGvB,CAAC;IAED,uCAAiB,GAAjB,UAAkB,IAAY;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,uCAAiB,GAAjB;QACE,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACjC,CAAC;IA/BU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,WAAW,CAiCvB;IAAD,kBAAC;CAAA;AAjCuB;AAmCxB;IAAA;IAGA,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;AC5CD;AAAA;IAAA;IA4BA,CAAC;IA1BQ,qBAAW,GAAG,IAAI,CAAC;IACnB,4BAAkB,GAAG,GAAG,CAAC;IACzB,sBAAY,GAAG,GAAG,CAAC;IACnB,2BAAiB,GAAG,EAAE,CAAC;IACvB,0BAAgB,GAAG,EAAE,CAAC;IACtB,6BAAmB,GAAG,CAAC,CAAC;IAExB,6BAAmB,GAAG,cAAc,CAAC;IACrC,4BAAkB,GAAG,aAAa,CAAC;IAEnC,0BAAgB,GAAG,WAAW,CAAC;IAC/B,8BAAoB,GAAG,cAAc,CAAC;IACtC,2BAAiB,GAAG,YAAY,CAAC;IACjC,4BAAkB,GAAG,YAAY,CAAC;IAElC,2BAAiB,GAAG,sBAAsB,CAAC;IAC3C,iCAAuB,GAAG,kBAAkB,CAAC;IAC7C,+BAAqB,GAAG,gBAAgB,CAAC;IACzC,iCAAuB,GAAG,kBAAkB,CAAC;IAC7C,wBAAc,GAAG,0BAA0B,CAAC;IAE5C,4BAAkB,GAAG,6CAA6C,CAAC;IACnE,+BAAqB,GAAG,gBAAgB,CAAC;IACzC,yBAAe,GAAG,qCAAqC,CAAC;IAExD,8BAAoB,GAAG,eAAe,CAAC;IAChD,gBAAC;CAAA;AA5BqB;;;;;;;;;;;;;;;ACAtB;AAAA;IACE,oBAAmB,KAAa,EAAS,IAAY,EAAS,OAAe,EACnE,KAAa,EAAS,IAAgB;QAD7B,UAAK,GAAL,KAAK,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;QACnE,UAAK,GAAL,KAAK,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAY;IAEhD,CAAC;IACH,iBAAC;AAAD,CAAC;;AAGD;IACE,oBAAmB,IAAY,EAAS,WAAmB,EAAS,OAAe;QAAhE,SAAI,GAAJ,IAAI,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;IAEnF,CAAC;IACH,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZsD;AACV;AACC;AACV;AACF;AACA;AAClC,0BAA0B;AACuB;AACM;AACO;AAItB;AAKxC;IAME,mBAAoB,UAA+B;QAA/B,eAAU,GAAV,UAAU,CAAqB;QADnD,UAAK,GAAiB,EAAE,CAAC;QAEvB,IAAI,CAAC,aAAa,GAAG,IAAI,mEAAa,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IACtE,CAAC;IAEO,6BAAS,GAAjB,UAAkB,CAAC,EAAE,CAAC;QACpB,MAAM,CAAC,eAAa,CAAC,UAAK,CAAC,MAAG,CAAC;IACjC,CAAC;IAED,4BAAQ,GAAR,UAAS,MAAkB,EAAE,KAAa,EAAE,MAAc;QACxD,IAAI,CAAC,GAAG,GAAG,mDAAkB,CAAC,MAAM,CAAC,aAAa,CAAC;aAChD,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;aACpB,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED,6BAAS,GAAT,UAAU,KAAmB;QAA7B,iBAgBC;QAfC,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;YACxB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAO;gBACtB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,6DAAU,CAAC,OAAO,EAAE,KAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;YACxE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC;aACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aAChB,KAAK,EAAE;aACP,MAAM,CAAC,MAAM,CAAC;aACd,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;aACrB,IAAI,CAAC,GAAG,EAAE,UAAC,CAAC,IAAK,QAAC,CAAC,OAAO,EAAE,EAAX,CAAW,CAAC;aAC7B,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;aACpB,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;aACvB,IAAI,CAAC,QAAQ,EAAE,UAAC,CAAC,IAAK,QAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAA1B,CAA0B,CAAC,CAAC;IACvD,CAAC;IAED,+BAAW,GAAX;QACE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC;aACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aAChB,IAAI,EAAE;aACN,MAAM,EAAE,CAAC;IACd,CAAC;IAED,+BAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC;aACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aAChB,UAAU,CAAC,wDAAuB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kDAAiB,CAAC,CAAC;aACzE,IAAI,CAAC,GAAG,EAAE,WAAC,IAAI,QAAC,CAAC,OAAO,EAAE,EAAX,CAAW,CAAC,CAAC;IACnC,CAAC;IAED,6BAAS,GAAT,UAAU,WAAmB;QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAI,IAAI,kBAAW,IAAI,IAAI,CAAC,WAAW,EAA/B,CAA+B,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC;aAC1B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aAChB,IAAI,EAAE;aACN,MAAM,EAAE,CAAC;QACV,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,kCAAc,GAAd,UAAe,SAAiB;QAC9B,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC;aACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aAChB,UAAU,CAAC,wDAAuB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aACjD,IAAI,CAAC,cAAc,EAAE,UAAC,CAAC;YACtB,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,SAAS,CAAC,CAAC,CAAC;gBAC/B,MAAM,CAAC,CAAC,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,CAAC,CAAC;YACX,CAAC;QACH,CAAC,CAAC;aACH,UAAU,CAAC,wDAAuB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;aACjD,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,6BAAS,GAAT;QACE,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QAC9C,IAAI,MAAM,GAAG,CAAC;QACd,IAAI,MAAM,GAAG,EAAE;QACf,IAAI,MAAM,GAAG,oDAAmB,EAAE,CAAC,KAAK,CAAC,CAAC,oDAAS,CAAC,YAAY,GAAG,oDAAS,CAAC,mBAAmB,EAAE,oDAAS,CAAC,gBAAgB,CAAC,CAAC;aAC3H,MAAM,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;aACjB,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,oDAAS,CAAC,WAAW,GAAG,oDAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;aACzF,IAAI,CAAC,gDAAe,CAAC,MAAM,CAAC,CAAC,CAAC;QAEjC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;aACpB,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;aACvB,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,oDAAS,CAAC,WAAW,GAAG,oDAAS,CAAC,iBAAiB,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;aAC/F,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC;aACjB,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC;aAC9B,IAAI,CAAC,OAAO,CAAC,CAAC;IACnB,CAAC;IAED,gCAAY,GAAZ,UAAa,QAAiB;QAC5B,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,oDAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,oDAAS,CAAC,WAAW,CAAC;QAC5E,IAAI,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QAC9C,IAAI,MAAM,GAAG,CAAC;QACd,IAAI,MAAM,GAAG,EAAE;QACf,IAAI,MAAM,GAAG,oDAAmB,EAAE,CAAC,KAAK,CAAC,CAAC,oDAAS,CAAC,YAAY,GAAG,oDAAS,CAAC,mBAAmB,EAAE,oDAAS,CAAC,gBAAgB,CAAC,CAAC;aAC3H,MAAM,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;aACjB,UAAU,CAAC,wDAAuB,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,kDAAiB,CAAC,CAAC;aACtF,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,oDAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;aACzE,IAAI,CAAC,gDAAe,CAAC,MAAM,CAAC,CAAC,CAAC;QAEjC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;aACvB,UAAU,CAAC,wDAAuB,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,kDAAiB,CAAC,CAAC;aACtF,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,oDAAS,CAAC,iBAAiB,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;IACpF,CAAC;IAID,oCAAgB,GAAhB,UAAiB,eAAgC,EAAE,WAAmB;QACpE,IAAI,UAAU,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAElB,IAAI,CAAC,GAAG;aACL,UAAU,CAAC,wDAAuB,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kDAAiB,CAAC,CAAC;aAC3E,IAAI,CAAC,OAAO,EAAE,oDAAS,CAAC,kBAAkB,CAAC,CAAC;QAE/C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAE1B,CAAC;IAED,sCAAkB,GAAlB,UAAmB,KAAmB;QACpC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QACnC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAEzB,IAAI,CAAC,GAAG;aACL,IAAI,CAAC,OAAO,EAAE,oDAAS,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;IAxIU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAOgC,0EAAmB;OANxC,SAAS,CAyIrB;IAAD,gBAAC;CAAA;AAzIqB;;;;;;;;;;;;AClBtB,+CAA+C,cAAc,gBAAgB,GAAG,0BAA0B,iBAAiB,qBAAqB,GAAG,gCAAgC,8BAA8B,iBAAiB,GAAG,qBAAqB,kBAAkB,sBAAsB,4BAA4B,wBAAwB,GAAG,WAAW,gBAAgB,qBAAqB,GAAG,kBAAkB,8BAA8B,qBAAqB,qBAAqB,GAAG,gBAAgB,sBAAsB,sBAAsB,qBAAqB,GAAG,C;;;;;;;;;;;ACA7jB,srBAAsrB,kBAAkB,yLAAyL,0BAA0B,6CAA6C,iCAAiC,wDAAwD,oCAAoC,6DAA6D,6BAA6B,iC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtjC;AAC/D;AAO1C;IAUE;QARwB,sBAAiB,GAA0B,IAAI,0DAAY,EAAE,CAAC;QACjE,qBAAgB,GAAG,IAAI,0DAAY,EAAa,CAAC;QAE7D,eAAU,GAAgB,CAAC,qDAAS,CAAC,IAAI,CAAC,CAAC;QACpD,cAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC;QAClC,qBAAgB,GAA4B,gBAAgB,CAAC;IAG7C,CAAC;IAEjB,uCAAQ,GAAR;IAEA,CAAC;IAED,0CAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,aAAa,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,qDAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QACnD,CAAC;IACH,CAAC;IAED,2CAAY,GAAZ;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,KAAK,gBAAgB,CAAC,IAAI;gBACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACnC,KAAK,CAAC;YACR,KAAK,gBAAgB,CAAC,WAAW;gBAC/B,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC1C,KAAK,CAAC;YACR,KAAK,gBAAgB,CAAC,YAAY;gBAChC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;gBACjD,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IAED,8CAAe,GAAf,UAAgB,SAAoB;QAClC,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;IACpD,CAAC;IAED,4CAAa,GAAb,UAAc,SAA2B;QACvC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAClB,KAAK,gBAAgB,CAAC,IAAI;gBACxB,KAAK,CAAC;YACR,KAAK,gBAAgB,CAAC,WAAW;gBAC/B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,KAAK,CAAC;YACR,KAAK,gBAAgB,CAAC,YAAY;gBAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACnD,KAAK,CAAC;QACV,CAAC;QACD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAnDuB;QAAvB,4DAAM,CAAC,cAAc,CAAC;kCAAoB,0DAAY;mEAA+B;IACjE;QAApB,4DAAM,CAAC,WAAW,CAAC;;kEAAkD;IAE7D;QAAR,2DAAK,EAAE;;4DAA4C;IALzC,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;;OACW,oBAAoB,CAuDhC;IAAD,2BAAC;CAAA;AAvDgC;AAyDjC,IAAY,gBAEX;AAFD,WAAY,gBAAgB;IAC1B,uDAAI;IAAE,qEAAW;IAAE,uEAAY;AACjC,CAAC,EAFW,gBAAgB,KAAhB,gBAAgB,QAE3B;;;;;;;;;;;;ACnED,mFAAmF,aAAa,mBAAmB,qBAAqB,iBAAiB,qBAAqB,uBAAuB,oBAAoB,mCAAmC,qBAAqB,qBAAqB,mBAAmB,wBAAwB,2BAA2B,4CAA4C,iCAAiC,GAAG,mBAAmB,gBAAgB,EAAE,kBAAkB,wBAAwB,gBAAgB,+BAA+B,GAAG,MAAM,uBAAuB,aAAa,eAAe,iBAAiB,qBAAqB,yBAAyB,eAAe,mCAAmC,qBAAqB,4CAA4C,0BAA0B,qDAAqD,GAAG,SAAS,kBAAkB,EAAE,WAAW,0BAA0B,mBAAmB,mBAAmB,qBAAqB,GAAG,iBAAiB,mBAAmB,wBAAwB,GAAG,WAAW,wBAAwB,kBAAkB,eAAe,cAAc,GAAG,gBAAgB,sBAAsB,iBAAiB,4BAA4B,GAAG,qBAAqB,uBAAuB,4BAA4B,GAAG,SAAS,qBAAqB,GAAG,gBAAgB,8BAA8B,qBAAqB,qBAAqB,GAAG,cAAc,sBAAsB,sBAAsB,qBAAqB,GAAG,cAAc,iBAAiB,qBAAqB,GAAG,oBAAoB,8BAA8B,iBAAiB,GAAG,C;;;;;;;;;;;ACA1nD,qHAAqH,cAAc,kHAAkH,MAAM,qeAAqe,qCAAqC,wOAAwO,iCAAiC,0VAA0V,8BAA8B,0lBAA0lB,uBAAuB,yZAAyZ,kCAAkC,gIAAgI,mCAAmC,0NAA0N,UAAU,4H;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzrF;AAClF;AACU;AASxD;IAYE,+BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAXhB,4BAAuB,GAAyB,IAAI,0DAAY,EAAE,CAAC;QAGtF,qBAAgB,GAAsB,EAAE,CAAC;QAElD,oBAAe,GAAoB,IAAI,CAAC;QAIxC,WAAM,GAAG,KAAK,CAAC;QAGb,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;IACjC,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,cAAI;YAC5C,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAClD,CAAC;IAEH,CAAC;IAED,sCAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7B,CAAC;IAED,2CAAW,GAAX,UAAY,IAAY;QACtB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,qDAAqB,GAArB,UAAsB,KAAa;QACjC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACtD,CAAC;IAvC2B;QAA3B,4DAAM,CAAC,kBAAkB,CAAC;kCAA0B,0DAAY;0EAA8B;IAEtF;QAAR,2DAAK,EAAE;kCAAqB,uDAAU;qEAAC;IAC/B;QAAR,2DAAK,EAAE;;mEAA0C;IACzC;QAAR,2DAAK,EAAE;;+DAAuB;IALpB,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAaiC,yDAAW;OAZjC,qBAAqB,CA0CjC;IAAD,4BAAC;CAAA;AA1CiC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXS;AACY;AACf;AAKxC;IAiCE;QA/BA,gBAAW,GAAG,QAAQ,CAAC;QACvB,gBAAW,GAAmB;YAC5B;gBACA,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,mBAAmB,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,uDAAU,CAAC,oFAAoF,EAAC,EAAE,EAAE,EAAE,CAAC,CAAC;aAClK;YACD;gBACA,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,kBAAkB,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,8NAA8N,EAAC,EAAE,EAAE,EAAE,CAAC,CAAC;aAC5S;YACD;gBACA,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,gBAAgB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAC,2EAA2E,EAAE,wUAAwU,CAAC,CAAC;gBAC/d,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,oBAAoB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAC,0EAA0E,EAAE,4KAA4K,CAAC,CAAC;gBACtU,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAE,4EAA4E,EAAC,qKAAqK,CAAC,CAAC;gBAC9T,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,kBAAkB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAE,4EAA4E,EAAC,qKAAqK,CAAC,CAAC;aAC9T;YACD;gBACA,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAE,8JAA8J,EAAC,2EAA2E,CAAC,CAAC;gBACtT,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,uBAAuB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAE,gGAAgG,EAAC,2EAA2E,CAAC,CAAC;gBAC9P,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,qBAAqB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAE,gGAAgG,EAAC,8FAA8F,CAAC,CAAC;gBAC/Q,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,uBAAuB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAE,wBAAwB,EAAC,0EAA0E,CAAC,CAAC;gBACrL,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,cAAc,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAE,wBAAwB,EAAC,0EAA0E,CAAC,CAAC;aAC3K;YACD;gBACA,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,kBAAkB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAC,mGAAmG,EAAE,wEAAwE,CAAC,CAAC;gBACzP,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,qBAAqB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAE,iDAAiD,EAAC,8GAA8G,CAAC,CAAC;gBAChP,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,eAAe,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,EAAE,EAAE,mCAAmC,EAAC,0CAA0C,CAAC,CAAC;aACvJ;YACD;gBACA,IAAI,uDAAU,CAAC,CAAC,EAAE,oDAAS,CAAC,oBAAoB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,uDAAU,CAAC,6lBAA6lB,EAAE,EAAE,EAAC,EAAE,CAAC,CAAC;aAC9qB;SACF,CAAC;IAIF,CAAC;IAED,uCAAS,GAAT,UAAU,IAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,QAAQ,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAI,IAAI,WAAI,CAAC,KAAK,IAAI,CAAC,EAAf,CAAe,CAAC,CAAC;YACrD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAI,IAAI,WAAI,CAAC,OAAO,IAAI,CAAC,EAAjB,CAAiB,CAAC,CAAC;gBACvD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAI,IAAI,WAAI,CAAC,KAAK,IAAI,CAAC,EAAf,CAAe,CAAC,CAAC;YACvD,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAI,IAAI,WAAI,CAAC,KAAK,IAAI,CAAC,EAAf,CAAe,CAAC,CAAC;YACrD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAI,IAAI,WAAI,CAAC,OAAO,IAAI,CAAC,EAAjB,CAAiB,CAAC,CAAC;gBACvD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAI,IAAI,WAAI,CAAC,KAAK,IAAI,CAAC,EAAf,CAAe,CAAC,CAAC;YACvD,CAAC;QACH,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAvDU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,mBAAmB,CA0D/B;IAAD,0BAAC;CAAA;AA1D+B;;;;;;;;;;;;;;ACJhC;AAAA;IAGE,oBAAmB,OAAsB,EAAS,aAA4B,EAAS,WAAmB;QAAvF,YAAO,GAAP,OAAO,CAAe;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAQ;QADnG,WAAM,GAAY,KAAK,CAAC;QAE7B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IAC/B,CAAC;IAED,4BAAO,GAAP;QAAA,iBAaC;QAZC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QAErC,IAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,CAAC,IAAI,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,EAAzC,CAAyC,CAAC;QAC5E,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,UAAU,CAAC,IAAI,IAAI,KAAI,CAAC,OAAO,CAAC,EAAE,EAAvC,CAAuC,CAAC;QACxE,IAAI,OAAO,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,OAAO,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;QACpC,MAAM,CAAC,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,OAAO;cAClC,GAAG,GAAG,OAAO,GAAI,GAAG,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC;cAC9C,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC;cAC7C,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC;IAClC,CAAC;IAED,+BAAU,GAAV,UAAW,KAAa;QACtB,MAAM,CAAC,aAAa,GAAG,KAAK,GAAG,GAAG,CAAC;IACrC,CAAC;IACH,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;AC5BD;AAAA;IACE,eAAmB,IAAY,EAAS,EAAU,EAAS,QAAgB;QAAxD,SAAI,GAAJ,IAAI,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAQ;IAC3E,CAAC;IACH,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;ACH+B;AACF;AAQ9B;IAOE,uBAAmB,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;QALvC,UAAK,GAAW,EAAE,CAAC;QAGlB,wBAAmB,GAAmB,EAAE,CAAC;QAG/C,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,qCAAa,GAAb;QAAA,iBAeC;QAdC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,aAAG;YAC1B,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,OAAO,EAAZ,CAAY,CAAC,CAAC,CAAC;YACjE,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC,CAAC;YAC/D,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,4CAAK,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,KAAK;YAClC,IAAI,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/B,GAAG,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,CAAC;gBAClB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,0CAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAW,GAAX,UAAY,YAAqB;QAAjC,iBAgBC;QAfC,IAAI,eAAe,GAAG,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACjF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,eAAe,CAAC,OAAO,CAAC,aAAG;YACzB,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,OAAO,EAAZ,CAAY,CAAC,CAAC,CAAC;YACjE,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC,CAAC;YAC/D,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,4CAAK,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,eAAe,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,KAAK;YACjC,IAAI,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/B,GAAG,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,CAAC;gBAClB,KAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAS,GAAT,UAAU,UAAsB;QAAhC,iBAiCC;QAhCC,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,WAAW,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;QAC9B,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,cAAI;YAC3B,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3B,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,KAAK;YAClC,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClC,GAAG,CAAC,OAAO,CAAC,cAAI;gBACd,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC/B,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC7C,CAAC;YACH,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,aAAG;YAClC,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,OAAO,EAAZ,CAAY,CAAC,CAAC,CAAC;YACjE,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC,CAAC;YAC/D,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,4CAAK,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,cAAI,IAAI,kBAAW,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAArC,CAAqC,CAAC,CAAC;QAC9E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,KAAK;YAC1C,IAAI,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/B,GAAG,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,CAAC;gBAClB,KAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;ACvFwC;AAGzC;IAKE,cAAmB,UAAsB,EAAU,KAAY,EAAU,KAAa;QAAnE,eAAU,GAAV,UAAU,CAAY;QAAU,UAAK,GAAL,KAAK,CAAO;QAAU,UAAK,GAAL,KAAK,CAAQ;QACpF,IAAI,UAAU,GAAG,oDAAS,CAAC,WAAW,GAAG,oDAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC;QACzE,IAAI,SAAS,GAAG,UAAU,GAAG,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;QAClD,IAAI,UAAU,GAAG,CAAC,UAAU,GAAG,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QAClF,IAAI,UAAU,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAC9C,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,UAAU;QACtD,IAAI,CAAC,CAAC,GAAG,oDAAS,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,GAAG,EAAE;QACjD,IAAI,CAAC,KAAK,GAAG,SAAS;QACtB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;IAC3B,CAAC;IAED,0BAAW,GAAX;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,wBAAS,GAAT;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,yBAAU,GAAV,UAAW,KAAK,EAAE,KAAK,EAAE,YAAY;QACnC,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAEO,mCAAoB,GAA5B,UAA6B,KAAK,EAAE,KAAK;QACvC,IAAI,UAAU,GAAG,oDAAS,CAAC,WAAW,GAAG,oDAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC;QACzE,IAAI,SAAS,GAAG,UAAU,GAAG,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;QAClD,IAAI,UAAU,GAAG,CAAC,UAAU,GAAG,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QAClF,IAAI,UAAU,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAC9C,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC,GAAG,UAAU;QACtD,IAAI,CAAC,CAAC,GAAG,oDAAS,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,GAAG,EAAE;QACjD,IAAI,CAAC,KAAK,GAAG,SAAS;QACtB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;IAC3B,CAAC;IAEO,iCAAkB,GAA1B,UAA2B,KAAK;QAC9B,IAAI,UAAU,GAAG,oDAAS,CAAC,kBAAkB,GAAG,oDAAS,CAAC,iBAAiB,GAAG,CAAC,CAAC;QAChF,IAAI,SAAS,GAAG,UAAU,GAAG,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;QAClD,IAAI,UAAU,GAAG,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAC9C,IAAI,CAAC,CAAC,GAAG,EAAE;QACX,IAAI,CAAC,CAAC,GAAG,oDAAS,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,GAAG,EAAE;QACjD,IAAI,CAAC,KAAK,GAAG,SAAS;QACtB,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC;IAC3B,CAAC;IAED,+BAAgB,GAAhB,UAAiB,KAAK;IAEtB,CAAC;IACH,WAAC;AAAD,CAAC;;;;;;;;;;;;;AC7DD,uBAAuB,uBAAuB,gBAAgB,GAAG,WAAW,sBAAsB,qBAAqB,GAAG,uBAAuB,iBAAiB,GAAG,eAAe,uBAAuB,YAAY,GAAG,SAAS,uBAAuB,GAAG,QAAQ,kBAAkB,uBAAuB,4BAA4B,8BAA8B,kDAAkD,uCAAuC,GAAG,cAAc,kBAAkB,uBAAuB,2BAA2B,qBAAqB,uBAAuB,2BAA2B,iCAAiC,wBAAwB,eAAe,gBAAgB,GAAG,8BAA8B,8BAA8B,GAAG,gCAAgC,8BAA8B,GAAG,aAAa,kBAAkB,uBAAuB,2BAA2B,uBAAuB,gBAAgB,gBAAgB,uBAAuB,wBAAwB,qBAAqB,4BAA4B,GAAG,QAAQ,iBAAiB,sBAAsB,wBAAwB,GAAG,iBAAiB,yBAAyB,GAAG,mBAAmB,yBAAyB,GAAG,sBAAsB,uBAAuB,kBAAkB,eAAe,aAAa,wBAAwB,4BAA4B,2BAA2B,iBAAiB,uBAAuB,iBAAiB,wBAAwB,iBAAiB,eAAe,GAAG,qCAAqC,uBAAuB,iBAAiB,iBAAiB,4BAA4B,eAAe,GAAG,wBAAwB,qBAAqB,uBAAuB,qBAAqB,iBAAiB,GAAG,0CAA0C,wBAAwB,GAAG,C;;;;;;;;;;;ACAryD,wgBAAwgB,uBAAuB,mlBAAmlB,WAAW,+E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7/B;AAEtF;AAGI;AACiB;AAKG;AACzB;AAOzC;IAWE,4BAAoB,SAAoB,EAC9B,WAAwB,EACxB,UAA+B;QAFrB,cAAS,GAAT,SAAS,CAAW;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAqB;QAXnB,sBAAiB,GAA6B,IAAI,0DAAY,EAAE,CAAC;QAC/D,sBAAiB,GAA0B,IAAI,0DAAY,EAAE,CAAC;IAWtF,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;QAClD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,oDAAS,CAAC,WAAW,EAAE,oDAAS,CAAC,YAAY,CAAC,CAAC;QACjF,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QAE3B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,cAAI;YAC5C,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAChC,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YAClD,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;QAC/B,CAAC,CAAC;IACJ,CAAC;IAED,wCAAW,GAAX,UAAY,OAAsB;QAChC,GAAG,CAAC,CAAC,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,MAAM,IAAI,iBAAiB,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,YAAY,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBACjG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;gBAC7B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YACvD,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,IAAI,cAAc,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,YAAY,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;gBAC1G,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAChE,CAAC;QACH,CAAC;IACH,CAAC;IAED,qCAAQ,GAAR,UAAS,YAAkB;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QACvD,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QACvD,CAAC;IACH,CAAC;IAED,uCAAU,GAAV,UAAW,KAAa;QACtB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IAC/D,CAAC;IAED,0CAAa,GAAb,UAAc,KAAa;QACzB,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;IAvDqB;QAArB,4DAAM,CAAC,YAAY,CAAC;kCAAoB,0DAAY;iEAAkC;IAC/D;QAAvB,4DAAM,CAAC,cAAc,CAAC;kCAAoB,0DAAY;iEAA+B;IAE7E;QAAR,2DAAK,EAAE;kCAAkB,iEAAe;+DAAC;IACjC;QAAR,2DAAK,EAAE;;4DAAuB;IAEb;QAAjB,+DAAS,CAAC,KAAK,CAAC;kCAAM,wDAAU;mDAAC;IARvB,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAY+B,qDAAS;YACjB,yDAAW;YACZ,0EAAmB;OAb9B,kBAAkB,CA2D9B;IAAD,yBAAC;CAAA;AA3D8B;;;;;;;;;;;;;;ACnB/B;AAAA;IAAA;IAMA,CAAC;IALQ,cAAI,GAAc,EAAC,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,EAAE,EAAE,cAAc,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC;IAK3F,gBAAC;CAAA;AANqB;;;;;;;;;;;;ACAtB,+BAA+B,gBAAgB,iBAAiB,kBAAkB,gBAAgB,GAAG,WAAW,eAAe,kBAAkB,gBAAgB,GAAG,kBAAkB,wBAAwB,iBAAiB,GAAG,gBAAgB,cAAc,kBAAkB,gBAAgB,GAAG,mBAAmB,eAAe,gBAAgB,sBAAsB,GAAG,qBAAqB,kBAAkB,qBAAqB,2BAA2B,uBAAuB,GAAG,K;;;;;;;;;;;ACAje,ygBAAygB,yBAAyB,kEAAkE,UAAU,iPAAiP,iBAAiB,2QAA2Q,cAAc,kQAAkQ,UAAU,mH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvzC;AAEtD;AACc;AAG1B;AAO5B;IAaE,0BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAL5C,kBAAa,GAAyB,EAAE,CAAC;IAOzC,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,sCAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;YAC3D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IAED,wCAAa,GAAb;QAAA,iBASC;QARC,IAAI,OAAO,GAAG;YACZ,MAAM,EAAE,IAAI,CAAC,cAAc;YAC3B,IAAI,EAAE,EAAE;SACT,CAAC;QACF,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,EAAE;YACzD,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;IAED,0CAAe,GAAf;QAAA,iBAwBC;QAvBC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QAC5C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,oBAAU;YACjC,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAClC,GAAG,EAAE,KAAI,CAAC,GAAG;gBACb,QAAQ,EAAE,UAAU,CAAC,MAAM;gBAC3B,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI;gBACrC,IAAI,EAAE,uDAAuD;aAC9D,CAAC,CAAC;YACH,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACjC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE;gBAC1B,KAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;gBACrC,IAAI,UAAU,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACtF,KAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,sBAAsB,CAAE,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAExI,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAChC,KAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC3B,KAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QACH,mCAAC,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,EAAC,SAAS,EAAE,GAAG,EAAC,EAAE,GAAG,CAAC,CAAC;QAC/C,sEAAsE;IACxE,CAAC;IAED,4CAAiB,GAAjB,UAAkB,GAAoB;QACpC,IAAI,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC1C,4DAA4D;QAC5D,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;QACpC,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACtC,QAAQ,CAAC,OAAO,CAAE,EAAE,SAAS,EAAE,OAAO,EAAC,EAAE,UAAS,OAAO,EAAE,MAAM;YAC/D,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5C,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAC5C,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACjD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAK,CAAC,uDAAuD,GAAG,MAAM,CAAC,CAAC;YAC1E,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IAED,uCAAY,GAAZ,UAAa,GAAG;QACd,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,gBAAM,IAAI,aAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC3D,CAAC;IAED,8BAAG,GAAH,UAAK,CAAC;QACJ,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;IAC3B,CAAC;IAAA,CAAC;IAEF,sCAAW,GAAX,UAAa,EAAE,EAAE,EAAE;QACjB,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,+BAA+B;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QACrC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;YAC7C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACvD,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACd,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,gCAAgC;IACnD,CAAC;IAAA,CAAC;IAzGO;QAAR,2DAAK,EAAE;;yDAA2B;IAC1B;QAAR,2DAAK,EAAE;kCAAW,mDAAQ;sDAAC;IAET;QAAlB,+DAAS,CAAC,MAAM,CAAC;;yDAAkB;IALzB,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAciC,yDAAW;OAbjC,gBAAgB,CA6G5B;IAAD,uBAAC;CAAA;AA7G4B;;;;;;;;;;;;;;;;ACV7B;AAAA;IAEE,yBAAmB,OAAgB,EAAS,KAAmB;QAA5C,YAAO,GAAP,OAAO,CAAS;QAAS,UAAK,GAAL,KAAK,CAAc;IAE/D,CAAC;IACH,sBAAC;AAAD,CAAC;;AAED;IAAA;IAGA,CAAC;IAAD,iBAAC;AAAD,CAAC;;AAED;IAAA;IAIA,CAAC;IAAD,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB0C;AAEU;AAEb;AAQxC;IAEE;IAAgB,CAAC;IAEjB,6CAAkB,GAAlB,UAAmB,QAAkB;QACnC,MAAM,CAAC;YACL,IAAI,iEAAe,CAAC;gBAClB,IAAI,EAAE,iCAAiC;gBACvC,MAAM,EAAE,oBAAoB;gBAC5B,OAAO,EAAE,gBAAgB;gBACzB,OAAO,EAAE;oBACP,+BAA+B;oBAC/B,yBAAyB;oBACzB,oCAAoC;oBACpC,+BAA+B;oBAC/B,wBAAwB;oBACxB,8BAA8B;oBAC9B,6EAA6E;oBAC7E,wFAAwF;iBACzF;aACF,EAAE;gBACC;oBACE,IAAI,EAAE,QAAQ;oBACd,KAAK,EAAE;wBACL;4BACE,IAAI,EAAE,oDAAS,CAAC,mBAAmB;4BACnC,EAAE,EAAE,oDAAS,CAAC,kBAAkB;4BAChC,MAAM,EAAE,IAAI;yBACb;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,kBAAkB;4BAClC,EAAE,EAAE,oDAAS,CAAC,gBAAgB;4BAC9B,MAAM,EAAE,IAAI;yBACb;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,gBAAgB;4BAChC,EAAE,EAAE,oDAAS,CAAC,iBAAiB;4BAC/B,MAAM,EAAE,KAAK;yBACd;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,iBAAiB;4BACjC,EAAE,EAAE,oDAAS,CAAC,kBAAkB;4BAChC,MAAM,EAAE,KAAK;yBACd;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,kBAAkB;4BAClC,EAAE,EAAE,oDAAS,CAAC,oBAAoB;4BAClC,MAAM,EAAE,KAAK;yBACd;qBACF;iBACF;gBACD;oBACE,IAAI,EAAE,kBAAkB;oBACxB,KAAK,EAAE;wBACL;4BACE,IAAI,EAAE,oDAAS,CAAC,mBAAmB;4BACnC,EAAE,EAAE,oDAAS,CAAC,kBAAkB;4BAChC,MAAM,EAAE,IAAI;yBACb;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,kBAAkB;4BAClC,EAAE,EAAE,oDAAS,CAAC,gBAAgB;4BAC9B,MAAM,EAAE,IAAI;yBACb;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,gBAAgB;4BAChC,EAAE,EAAE,oDAAS,CAAC,qBAAqB;4BACnC,MAAM,EAAE,KAAK;yBACd;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,qBAAqB;4BACrC,EAAE,EAAE,oDAAS,CAAC,eAAe;4BAC7B,MAAM,EAAE,KAAK;yBACd;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,eAAe;4BAC/B,EAAE,EAAE,oDAAS,CAAC,oBAAoB;4BAClC,MAAM,EAAE,KAAK;yBACd;qBACF;iBACF;aACF,CAAC;YACJ,IAAI,iEAAe,CACjB;gBACE,IAAI,EAAE,+BAA+B;gBACrC,MAAM,EAAE,gGAAgG;gBACxG,OAAO,EAAE,qUAAqU;gBAC9U,OAAO,EAAE;oBACP,iQAAiQ;oBACjQ,uBAAuB;oBACvB,mCAAmC;oBACnC,+EAA+E;oBAC/E,iSAAiS;iBAClS;aACF,EACD;gBACE;oBACE,IAAI,EAAE,QAAQ;oBACd,KAAK,EAAE;wBACL;4BACE,IAAI,EAAE,oDAAS,CAAC,mBAAmB;4BACnC,EAAE,EAAE,oDAAS,CAAC,kBAAkB;4BAChC,MAAM,EAAE,IAAI;yBACb;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,kBAAkB;4BAClC,EAAE,EAAE,oDAAS,CAAC,gBAAgB;4BAC9B,MAAM,EAAE,IAAI;yBACb;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,gBAAgB;4BAChC,EAAE,EAAE,oDAAS,CAAC,iBAAiB;4BAC/B,MAAM,EAAE,KAAK;yBACd;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,iBAAiB;4BACjC,EAAE,EAAE,oDAAS,CAAC,kBAAkB;4BAChC,MAAM,EAAE,KAAK;yBACd;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,kBAAkB;4BAClC,EAAE,EAAE,oDAAS,CAAC,oBAAoB;4BAClC,MAAM,EAAE,KAAK;yBACd;qBACF;iBACF;gBACD;oBACE,IAAI,EAAE,kBAAkB;oBACxB,KAAK,EAAE;wBACL;4BACE,IAAI,EAAE,oDAAS,CAAC,mBAAmB;4BACnC,EAAE,EAAE,oDAAS,CAAC,kBAAkB;4BAChC,MAAM,EAAE,IAAI;yBACb;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,kBAAkB;4BAClC,EAAE,EAAE,oDAAS,CAAC,gBAAgB;4BAC9B,MAAM,EAAE,IAAI;yBACb;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,gBAAgB;4BAChC,EAAE,EAAE,oDAAS,CAAC,uBAAuB;4BACrC,MAAM,EAAE,KAAK;yBACd;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,uBAAuB;4BACvC,EAAE,EAAE,oDAAS,CAAC,kBAAkB;4BAChC,MAAM,EAAE,KAAK;yBACd;wBACD;4BACE,IAAI,EAAE,oDAAS,CAAC,kBAAkB;4BAClC,EAAE,EAAE,oDAAS,CAAC,oBAAoB;4BAClC,MAAM,EAAE,KAAK;yBACd;qBACF;iBACF;aACF,CAAC;SACL;IACH,CAAC;IAED,wCAAa,GAAb,UAAc,UAAsB,EAAE,eAAgC;QACpE,EAAE,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,GAAG,iCAAiC,CAAC,CAAC,CAAC;YACrE,MAAM,CAAC;gBACL;oBACE,IAAI,EAAE,sBAAsB;oBAC5B,WAAW,EAAE,6hBAA6hB;oBAC1iB,cAAc,EAAE,KAAK;oBACrB,OAAO,EAAE,GAAG;iBACb;aACF;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC;gBACL;oBACE,IAAI,EAAE,+BAA+B;oBACrC,WAAW,EAAE,kWAAkW;oBAC/W,cAAc,EAAE,KAAK;oBACrB,OAAO,EAAE,GAAG;iBACb;aACF;QACH,CAAC;IACH,CAAC;IAED,yCAAc,GAAd,UAAe,UAAsB,EAAE,eAAgC;QAErE,EAAE,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,IAAI,GAAG,iCAAiC,CAAC,CAAC,CAAC;YACrE,MAAM,CAAC;gBACL;oBACE,IAAI,EAAE,kCAAkC;oBACxC,MAAM,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE;oBACpC,WAAW,EAAE,EAAE;oBACf,cAAc,EAAE,UAAU;oBAC1B,cAAc,EAAE;wBACd,sdAAsd;wBACtd,+DAA+D;qBAChE;oBACD,WAAW,EAAE;wBACX,oEAAoE;qBACrE;oBACD,OAAO,EAAE;wBACP,sTAAsT;wBACtT,mBAAmB;qBACpB;iBACF;aACF,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC;gBACL;oBACE,IAAI,EAAE,8BAA8B;oBACpC,MAAM,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;oBACnC,WAAW,EAAE,GAAG;oBAChB,cAAc,EAAE,UAAU;oBAC1B,cAAc,EAAE;wBACd,2BAA2B;wBAC3B,oBAAoB;wBACpB,kDAAkD;wBAClD,uCAAuC;wBACvC,+PAA+P;wBAC/P,4EAA4E;wBAC5E,kGAAkG;wBAClG,2BAA2B;wBAC3B,iDAAiD;wBACjD,kBAAkB;qBACnB;oBACD,WAAW,EAAE;wBACX,6IAA6I;qBAC9I;oBACD,OAAO,EAAE;wBACP,8kBAA8kB;wBAC9kB,mBAAmB;qBACpB;iBACF;aACF,CAAC;QACJ,CAAC;IACH,CAAC;IAzOU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,gBAAgB,CA0O5B;IAAD,uBAAC;CAAA;AA1O4B;;;;;;;;;;;;;;ACZ7B;AAAA;IAAA;IAcA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;ACdD,sBAAsB,qBAAqB,GAAG,8BAA8B,8BAA8B,iBAAiB,GAAG,sBAAsB,iBAAiB,GAAG,wBAAwB,8BAA8B,GAAG,aAAa,0BAA0B,iBAAiB,qBAAqB,qBAAqB,sBAAsB,mBAAmB,GAAG,mBAAmB,4BAA4B,mBAAmB,KAAK,eAAe,sBAAsB,qBAAqB,GAAG,iBAAiB,yBAAyB,GAAG,yBAAyB,wBAAwB,8BAA8B,GAAG,C;;;;;;;;;;;ACAlnB,2TAA2T,irHAAirH,UAAU,s3BAAs3B,UAAU,gqC;;;;;;;;;;;;;;;;;;;;;;;;;ACAxyJ;AAC0B;AAQxG;IA+BE,4BAAoB,YAAsB;QAAtB,iBAAY,GAAZ,YAAY,CAAU;QA7BtB,oBAAe,GAA2B,IAAI,0DAAY,EAAE,CAAC;QAGxE,eAAU,GAAY,KAAK,CAAC;QAErC,cAAS,GAAa;YACpB,YAAY,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,qBAAqB,EAAE,UAAU;SAClG,CAAC;QAEF,cAAS,GAAa;YACpB,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,OAAO,EAAE,4BAA4B,EAAE,+BAA+B,EAAE,mBAAmB,EAAE,UAAU;YACnJ,eAAe,EAAE,yBAAyB,EAAE,2BAA2B;SACxE;QAYD,qBAAgB,GAAa,EAAE,CAAC;QAChC,qBAAgB,GAAa,EAAE,CAAC;IAIc,CAAC;IAE/C,qCAAQ,GAAR;IAEA,CAAC;IAED,sCAAS,GAAT,UAAU,OAAO;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;IAClF,CAAC;IAED,0CAAa,GAAb,UAAc,QAAQ;QACpB,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACvD,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAED,0CAAa,GAAb,UAAc,QAAQ;QACpB,IAAI,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACvD,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC;IACH,CAAC;IAED,8CAAiB,GAAjB;QACE,IAAI,CAAC,eAAe,CAAC,IAAI,CACvB;YACE,cAAc,EAAE,IAAI,CAAC,YAAY;YACjC,KAAK,EAAE,IAAI,CAAC,GAAG;YACf,SAAS,EAAE,IAAI,CAAC,OAAO;YACvB,YAAY,EAAE,IAAI,CAAC,UAAU;YAC7B,QAAQ,EAAE,IAAI,CAAC,MAAM;YACrB,OAAO,EAAE,IAAI,CAAC,KAAK;YACnB,UAAU,EAAE,IAAI,CAAC,QAAQ;YACzB,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,cAAc,EAAE,IAAI,CAAC,YAAY;YACjC,WAAW,EAAE,IAAI,CAAC,SAAS;YAC3B,WAAW,EAAE,IAAI,CAAC,gBAAgB;YAClC,WAAW,EAAE,IAAI,CAAC,gBAAgB;SACnC,CACF,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IA3EmB;QAAnB,4DAAM,CAAC,UAAU,CAAC;kCAAkB,0DAAY;+DAAgC;IAGxE;QAAR,2DAAK,EAAE;;0DAA6B;IAL1B,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAgCkC,mEAAQ;OA/B/B,kBAAkB,CA+E9B;IAAD,yBAAC;CAAA;AA/E8B;;;;;;;;;;;;;;ACT/B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1 {\\n  margin: 10px 50px;\\n}\\n\\n.side {\\n  float: left;\\n  margin: 20px 0px;\\n}\\n\\napp-main-graph {\\n  float: left;\\n  margin: 20px 50px;\\n}\\n\\napp-detail-panel {\\n  float: left;\\n  width: 40%;\\n  height: 700px;\\n  margin: 20px 0px;\\n  padding: 20px;\\n  border: solid 2px #b2b2b2;\\n  border-radius: 5px;\\n}\\n\\n#main-view {\\n  width: 100%;\\n  height: 800px;\\n}\\n\\n#map-view {\\n  width: 100%;\\n}\"","module.exports = \"<div id=\\\"main-view\\\">\\n  <header>\\n    <h1> Deutsches Bildungssystem </h1>\\n  </header>\\n  <app-main-graph [recommendResult]=\\\"currentRecommendResult\\\" (courseNode)=\\\"onSelectCourseNode($event)\\\" (isDetailMode)=\\\"changeDetailMode($event)\\\"\\n    [isDetailMode]=\\\"isDetailMode\\\"></app-main-graph>\\n  <div class=\\\"side\\\">\\n    <app-edu-side-panel [selectedCourseNode]=\\\"selectedCourseNode\\\" [recommendResults]=\\\"recommendResults\\\" [isDetailMode]=\\\"isDetailMode\\\" (selectedJobIndex)=\\\"selectJobIndex($event)\\\"></app-edu-side-panel>\\n    <app-user-modal (userData)=\\\"applyUserData($event)\\\" [isUserMode]=\\\"recommendResults != null\\\"></app-user-modal>\\n  </div>\\n  <ng-container *ngIf=\\\"isDetailMode\\\">\\n    <app-detail-panel (isDetailMode)=\\\"changeDetailMode($event)\\\" [majorInfos]=\\\"majorInfos\\\" (majorInfo)=\\\"selectMajorInfo($event)\\\"></app-detail-panel>\\n  </ng-container>\\n</div>\\n<div id=\\\"map-view\\\">\\n  <ng-container *ngIf=\\\"schoolInfos && isDetailMode\\\">\\n    <app-map-view [schoolInfos]=\\\"schoolInfos\\\" [userData]=\\\"userData\\\"></app-map-view>\\n  </ng-container>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserData } from './user-data';\nimport { CourseInfo, CourseNode } from './course-node';\nimport { RecommendResult } from './recommend-result';\nimport { RecommendService } from './recommend.service';\nimport { MajorInfo } from './major-info';\nimport { SchoolInfo } from './school-info';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  recommendResults: RecommendResult[] = null;\n  currentRecommendResult: RecommendResult = null;\n  isDetailMode = false;\n  majorInfos: MajorInfo[] = [MajorInfo.NONE];\n  selectedCourseNode: CourseNode;\n  schoolInfos: SchoolInfo[] = [];\n  userData: UserData;\n\n  constructor(private recommendService: RecommendService) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  applyUserData(userData: UserData) {\n    this.selectedCourseNode = null;\n    this.recommendResults = this.recommendService.getRecommendResult(userData);\n    this.currentRecommendResult = this.recommendResults[0];\n    this.userData = userData;\n  }\n\n  onSelectCourseNode(courseNode: CourseNode) {\n    // detail 모드일 때 \n    if (this.isDetailMode) {\n      // 대학교를 골랐을 때\n      if (courseNode.layer == 4) {\n        this.majorInfos = this.recommendService.getMajorInfos(courseNode, this.currentRecommendResult);\n      // 그 외의 학교\n      } else {\n        this.majorInfos = [MajorInfo.NONE];\n        this.schoolInfos = this.recommendService.getSchoolInfos(this.selectedCourseNode, this.currentRecommendResult);\n      }\n      this.selectedCourseNode = courseNode;\n\n    // info 모드일 때 \n    } else {\n      this.selectedCourseNode = courseNode;\n    }\n  }\n\n  selectJobIndex(index: number) {\n    this.currentRecommendResult = this.recommendResults[index];\n  }\n\n  changeDetailMode(isDetailMode: boolean) {\n    this.isDetailMode = isDetailMode;\n  }\n\n  selectMajorInfo(majorInfo: MajorInfo) {\n    this.schoolInfos = this.recommendService.getSchoolInfos(this.selectedCourseNode, this.currentRecommendResult);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { MainGraphComponent } from './main-graph/main-graph.component';\nimport { EduSidePanelComponent } from './edu-side-panel/edu-side-panel.component';\nimport { UserModalComponent } from './user-modal/user-modal.component';\nimport { DetailPanelComponent } from './detail-panel/detail-panel.component';\nimport { MapViewComponent } from './map-view/map-view.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainGraphComponent,\n    EduSidePanelComponent,\n    UserModalComponent,\n    DetailPanelComponent,\n    MapViewComponent\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AreaService {\n\n  AREAS: string[] = [\n    'Berlin',\n    'Hamburg',\n    'Niedersachsen',\n    'NRW'\n  ];\n\n  LNTLNGS: LatLng[] = [\n    {lat: 52.52, lng: 13.40},\n    {lat: 53.55, lng: 9.99},\n    {lat: 52.63, lng: 9.845},\n    {lat: 51.43, lng: 7.661}\n  ]\n\n  private areaSource = new BehaviorSubject<string>(\"Berlin\");\n  areaObservable = this.areaSource.asObservable();\n  currentArea = 'Berlin';\n  constructor() { \n    \n  }\n\n  changeCurrentArea(area: string) {\n    this.areaSource.next(area);\n    this.currentArea = 'Berlin';\n  }\n\n  getCurrAreaLntLng() {\n    let currIndex = this.AREAS.indexOf(this.currentArea);\n    return this.LNTLNGS[currIndex];\n  }\n\n}\n\nexport class LatLng {\n  lat: number;\n  lng: number;\n}\n","export class Constants {\n\n  static GRAPH_WIDTH = 1100;\n  static GRAPH_DETAIL_WIDTH = 300;\n  static GRAPH_HEIGHT = 700;\n  static GRAPH_MARGIN_SIDE = 10;\n  static GRAPH_MARGIN_TOP = 20;\n  static GRAPH_MARGIN_BOTTOM = 2;\n\n  static COURSE_KINDERGARTEN = 'kindergarten';\n  static COURSE_GRUNDSCHULE = 'Grundschule';\n\n  static COURSE_GYMNASIUM = 'Gymnasium';\n  static COURSE_GEASAMTSCHULE = \"Gesamtschule\";\n  static COURSE_REALSCHULE = \"Realschule\";\n  static COURSE_HAUPTSCHULE = \"Hauptschle\";\n\n  static COURSE_GYMNASIALE = 'Gymnasiale Oberstufe';\n  static COURSE_BERUFSOBERSCHULE = \"Berufsoberschule\";\n  static COURSE_FACHOBERSCHULE = 'Fachoberschule';\n  static COURSE_BEFURSFACHSCHULE = \"Befursfachschule\";\n  static COURSE_BETRIEB = \"Berufsschule und Betrieb\";\n\n  static COURSE_UNIVERSITAT = 'Universitat and gleichwertige Institutionen';\n  static COURSE_BERUFSAKADEMIE = \"Berufsakadamie\";\n  static COURSE_FACHHOCH = 'Fachhoch- und Verwaltungshochschule';\n\n  static COURSE_WEITERBILDUNG = 'Weiterbildung';\n}","export class CourseNode {\n  constructor(public layer: number, public name: string, public fromAge: number,\n     public toAge: number, public info: CourseInfo) {\n\n  }\n}\n\n\nexport class CourseInfo {\n  constructor(public info: string, public certificate: string, public options: string) {\n\n  }\n}\n","import { Injectable, ElementRef } from '@angular/core';\nimport  * as d3Selection from 'd3-selection';\nimport * as d3Transition from 'd3-transition';\nimport * as d3Scale from 'd3-scale';\nimport * as d3Axis from 'd3-axis';\nimport * as d3Ease from 'd3-ease';\n//import * as d3 from 'd3'\nimport { CourseLink } from './graph/course-link';\nimport { LayoutManager } from './graph/layout-manager';\nimport { EduStructureService } from './edu-structure.service';\nimport { AppComponent } from './app.component';\nimport { LIFECYCLE_HOOKS_VALUES } from '@angular/compiler/src/lifecycle_reflector';\nimport { CareerPath, RecommendResult } from './recommend-result';\nimport { Constants } from './constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class D3Service {\n\n  svg: any;\n  layoutManager:LayoutManager;\n\n  links: CourseLink[] = [];\n  constructor(private eduService: EduStructureService) {\n    this.layoutManager = new LayoutManager(this.eduService.courseNodes);\n  }\n\n  private translate(x, y): string {\n    return `translate(${x}, ${y})`;\n  }\n\n  applySVG(svgRef: ElementRef, width: number, height: number) {\n    this.svg = d3Selection.select(svgRef.nativeElement)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n  }\n\n  initLinks(paths: CareerPath[]) {\n    paths.forEach((path, index) => {\n      path.paths.forEach(subPath => {\n          this.links.push(new CourseLink(subPath, this.layoutManager, index));\n      });\n    });\n\n    this.svg.selectAll(\".link\")\n      .data(this.links)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", (d) => d.getPath())\n      .attr('fill', 'none')\n      .attr('stroke-width', 3)\n      .attr('stroke', (d) => d.isPrev ? 'green' : 'red');\n  }\n\n  deleteLinks() {\n    this.links.length = 0;\n    this.svg.selectAll('.link')\n      .data(this.links)\n      .exit()\n      .remove();\n  }\n\n  updateLinks() {\n    this.svg.selectAll(\".link\")\n      .data(this.links)\n      .transition(d3Transition.transition().duration(400).ease(d3Ease.easeLinear))\n        .attr(\"d\", d => d.getPath());\n  }\n\n  trimLinks(detailIndex: number) {\n    this.links = this.links.filter(link => detailIndex == link.detailIndex);\n    this.svg.selectAll('.link')\n    .data(this.links)\n    .exit()\n    .remove();\n    this.updateLinks();\n  }\n\n  highlightLinks(pathIndex: number) {\n    this.svg.selectAll(\".link\")\n      .data(this.links)\n      .transition(d3Transition.transition().duration(400))\n        .attr(\"stroke-width\", (d) => {\n          if (d.detailIndex == pathIndex) {\n            return 6;\n          } else {\n            return 3;\n          }\n        })\n      .transition(d3Transition.transition().duration(400))\n        .attr(\"stroke-width\", 3);\n  }\n\n  initYAxis() {\n    let courseNodes = this.eduService.courseNodes;\n    let minAge = 3\n    let maxAge = 28\n    let yScale = d3Scale.scaleLinear().range([Constants.GRAPH_HEIGHT - Constants.GRAPH_MARGIN_BOTTOM, Constants.GRAPH_MARGIN_TOP])\n      .domain([minAge, maxAge]);\n    this.svg.append('g')\n      .attr(\"transform\", this.translate(Constants.GRAPH_WIDTH - Constants.GRAPH_MARGIN_SIDE, 0))\n      .call(d3Axis.axisLeft(yScale));\n\n    this.svg.append('text')\n      .attr('class', 'legend')\n      .attr(\"transform\", this.translate(Constants.GRAPH_WIDTH - Constants.GRAPH_MARGIN_SIDE - 50, 10))\n      .attr(\"dy\", \"1em\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Jahre\"); \n  }\n\n  setYAxisMode(isDetail: boolean) {\n    let width = isDetail ? Constants.GRAPH_DETAIL_WIDTH : Constants.GRAPH_WIDTH;\n    let transitionTime = isDetail ? 400 : 0;\n    let courseNodes = this.eduService.courseNodes;\n    let minAge = 3\n    let maxAge = 28\n    let yScale = d3Scale.scaleLinear().range([Constants.GRAPH_HEIGHT - Constants.GRAPH_MARGIN_BOTTOM, Constants.GRAPH_MARGIN_TOP])\n      .domain([minAge, maxAge]);\n    this.svg.select('g')\n      .transition(d3Transition.transition().duration(transitionTime).ease(d3Ease.easeLinear))\n      .attr(\"transform\", this.translate(width - Constants.GRAPH_MARGIN_SIDE, 0))\n      .call(d3Axis.axisLeft(yScale));\n\n    this.svg.select('.legend')\n      .transition(d3Transition.transition().duration(transitionTime).ease(d3Ease.easeLinear))\n      .attr(\"transform\", this.translate(width - Constants.GRAPH_MARGIN_SIDE - 50, 10))\n  }\n\n  \n\n  changeDetailMode(recommendResult: RecommendResult, detailIndex: number) {\n    let careerPath = recommendResult.paths[0];\n    this.layoutManager.trimRects(careerPath);\n    this.trimLinks(0);\n\n    this.svg\n      .transition(d3Transition.transition().duration(400).ease(d3Ease.easeLinear))\n      .attr('width', Constants.GRAPH_DETAIL_WIDTH);\n\n    this.setYAxisMode(true);\n\n  }\n\n  changeOverviewMode(paths: CareerPath[]) {\n    this.layoutManager.generateRects();\n    this.deleteLinks();\n    this.initLinks(paths);\n    this.setYAxisMode(false);\n\n    this.svg\n      .attr('width', Constants.GRAPH_WIDTH);\n  }\n}\n","module.exports = \"\\nbutton.btn.btn-light.back {\\n  margin: 0;\\n  width: 100%;\\n}\\n\\nbutton.btn.btn-light {\\n  width: 350px;\\n  margin: 10px 0px;\\n}\\n\\nbutton.btn.btn-light:hover {\\n  background-color: #447dd3;\\n  color: white;\\n}\\n\\nspan.card-title {\\n  display: flex;\\n  line-height: 50px;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.card {\\n  width: 100%;\\n  margin: 20px 0px;\\n}\\n\\n.card-header {\\n  background-color: #447dd3;\\n  font-weight: 400;\\n  font-size: 1.2em;\\n}\\n\\n.card-body {\\n  min-height: 150px;\\n  max-height: 350px;\\n  overflow: scroll;\\n}\"","module.exports = \"<div>\\n  <button class=\\\"btn btn-light back\\\" (click)=\\\"clickBackBtn()\\\">Zurück</button>\\n</div>\\n<ng-container *ngIf=\\\"currState == DetailPanelState.IDLE\\\">\\n  <div>\\n    <span class=\\\"card-title\\\">\\n      <h3>Detail-Ansicht über das Studienfach</h3>\\n    </span>\\n  </div>\\n</ng-container>\\n<ng-container *ngIf=\\\"currState == DetailPanelState.MAJOR_INFOS\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header text-white\\\">\\n      Empfohlene Studienfächer\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <ng-container *ngFor=\\\"let majorInfo of majorInfos let i = index\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"selectMajorInfo(majorInfo)\\\">{{ majorInfo.name }}</button>\\n      </ng-container>\\n    </div>\\n  </div>\\n</ng-container>\\n<ng-container *ngIf=\\\"selectedMajorInfo != null\\\">\\n  <div class=\\\"card-body\\\">\\n    <h4 class=\\\"card-title\\\">{{ selectedMajorInfo.name }} </h4>\\n    <p class=\\\"card-text\\\">\\n      {{ selectedMajorInfo.description }}\\n    </p>\\n    <h4 class=\\\"card-title\\\">Lernaufwand: {{ selectedMajorInfo.learningEffort }}</h4>\\n    <h4 class=\\\"card-title\\\">Durchschnitts-NC-Wert: {{ selectedMajorInfo.ncValue }}</h4>\\n  </div>\\n</ng-container>\"","import { Component, OnInit, EventEmitter, Output, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { MajorInfo } from '../major-info';\n\n@Component({\n  selector: 'app-detail-panel',\n  templateUrl: './detail-panel.component.html',\n  styleUrls: ['./detail-panel.component.css']\n})\nexport class DetailPanelComponent implements OnInit, OnChanges {\n\n  @Output('isDetailMode') detailModeEmitter: EventEmitter<boolean> = new EventEmitter();\n  @Output('majorInfo') majorInfoEmitter = new EventEmitter<MajorInfo>();\n\n  @Input() majorInfos: MajorInfo[] = [MajorInfo.NONE];\n  currState = DetailPanelState.IDLE;\n  DetailPanelState: typeof DetailPanelState = DetailPanelState;\n  selectedMajorInfo: MajorInfo;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes['majorInfos'].isFirstChange() && this.majorInfos[0] != MajorInfo.NONE) {\n      this.goToNextState(DetailPanelState.MAJOR_INFOS);\n    }\n  }\n\n  clickBackBtn() {\n    switch (this.currState) {\n      case DetailPanelState.IDLE:\n        this.detailModeEmitter.emit(false);\n        break;\n      case DetailPanelState.MAJOR_INFOS:\n        this.goToNextState(DetailPanelState.IDLE);\n        break;\n      case DetailPanelState.MAJOR_DETAIL:\n        this.goToNextState(DetailPanelState.MAJOR_INFOS);\n        break;\n    }\n  }\n\n  selectMajorInfo(majorInfo: MajorInfo) {\n    this.selectedMajorInfo = majorInfo;\n    this.goToNextState(DetailPanelState.MAJOR_DETAIL);\n  }\n\n  goToNextState(nextState: DetailPanelState) {\n    switch (nextState) {\n      case DetailPanelState.IDLE:\n        break;\n      case DetailPanelState.MAJOR_INFOS:\n        this.selectedMajorInfo = null;\n        break;\n      case DetailPanelState.MAJOR_DETAIL:\n        this.majorInfoEmitter.emit(this.selectedMajorInfo);\n        break;\n    }\n    this.currState = nextState;\n  }\n\n}\n\nexport enum DetailPanelState {\n  IDLE, MAJOR_INFOS, MAJOR_DETAIL\n}\n","module.exports = \"@import url('https://fonts.googleapis.com/css?family=Oldenburg');\\n#dropdown {\\n  display: block;\\n  padding: 5px 8px;\\n  width: 300px;\\n  margin: 0px 10px;\\n  position: relative;\\n  cursor: pointer;\\n  border-left: 4px solid #739cda;\\n  background: #fff;\\n  font-size: 1.2em;\\n  color: #656565;\\n  font-weight: normal;\\n  box-sizing: border-box;\\n  box-shadow: 1px 1px 2px rgba(0,0,0,0.3);\\n  transition: all 0.15s linear;\\n}\\n#dropdown:hover { color: #898989; }\\n#dropdown.open {\\n  background: #5a90e0;\\n  color: #fff;\\n  border-left-color: #6c6d70;\\n}\\nul {\\n  position: absolute;\\n  top: 70%;\\n  left: -4px;\\n  width: 300px;\\n  padding: 0px 0px;\\n  pointer-events: none;\\n  opacity: 0;\\n  border-left: 4px solid #8e9196;\\n  background: #fff;\\n  box-shadow: 1px 1px 2px rgba(0,0,0,0.3);\\n  list-style-type: none;\\n  transition: height 0.3s, opacity 0.3s, top 0.3s;;\\n}\\nul li { font-size: 0.9em; }\\nul li a {\\n  text-decoration: none;\\n  display: block;\\n  color: #447dd3;\\n  padding: 5px 8px;\\n}\\nul li a:hover {\\n  color: #6fa0e9;\\n  background: #e7f0f7;\\n}\\nul.open {\\n  pointer-events: all;\\n  display:block;\\n  opacity: 1;\\n  top: 100%;\\n}\\n#detail-view {\\n  margin: 20px 10px;\\n  width: 300px;\\n  transition: margin 0.3s;\\n}\\n#detail-view.open {\\n  margin: 200px 10px;\\n  transition: margin 0.3s;\\n}\\n.elem {\\n  margin-top: 15px;\\n}\\n.card-header {\\n  background-color: #447dd3;\\n  font-weight: 400;\\n  font-size: 1.2em;\\n}\\n.card-body {\\n  min-height: 150px;\\n  max-height: 350px;\\n  overflow: scroll;\\n}\\n.btn-light {\\n  width: 250px;\\n  margin: 10px 0px;\\n}\\n.btn-light:hover {\\n  background-color: #447dd3;\\n  color: white;\\n}\"","module.exports = \"<div #dropdown id=\\\"dropdown\\\" class=\\\"ddmenu\\\" (click)=\\\"toggle()\\\" [class.open]=\\\"opened\\\">\\n  {{selectedArea}}\\n  <ul [class.open]=\\\"opened\\\">\\n    <li *ngFor=\\\"let area of areas\\\">\\n      <a (click)=\\\"onClickArea(area)\\\">{{area}}</a>\\n    </li>\\n  </ul>\\n</div>\\n\\n<ng-container *ngIf=\\\"recommendResults == null\\\">\\n  <div id=\\\"detail-view\\\" [class.open]=\\\"opened\\\">\\n    <ng-container *ngIf=\\\"selectedCourseNode\\\">\\n      <ng-container *ngIf=\\\"selectedCourseNode.layer >= 2 && selectedCourseNode.layer <= 4\\\">\\n        <div class=\\\"card elem\\\">\\n          <div class=\\\"card-header text-white\\\">\\n            Mögliche Schulabschlüsse          \\n          </div>\\n          <div class=\\\"card-body\\\">\\n            {{selectedCourseNode.info.certificate}}\\n          </div>\\n        </div>\\n        <div class=\\\"card elem\\\">\\n          <div class=\\\"card-header text-white\\\">\\n            Anschließende Möglichkeiten:\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            {{selectedCourseNode.info.options}}\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"selectedCourseNode.layer <= 1 || selectedCourseNode.layer >= 5\\\">\\n        <div class=\\\"card elem\\\">\\n          <div class=\\\"card-header text-white\\\">\\n            Allgemeine Informationen\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            {{selectedCourseNode.info.info}}\\n          </div>\\n        </div>\\n      </ng-container>\\n    </ng-container>\\n  </div>\\n\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"recommendResults != null\\\">\\n  <div id=\\\"detail-view\\\" [class.open]=\\\"opened\\\">\\n    <ng-container *ngIf=\\\"!isDetailMode\\\">\\n      <div class=\\\"card elem\\\">\\n        <div class=\\\"card-header text-white\\\">\\n          Suche einen Job aus\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <ng-container *ngFor=\\\"let result of recommendResults let i = index\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"changeCurrentJobIndex(i)\\\">{{ result.jobInfo.name }}</button>\\n          </ng-container>\\n        </div>\\n      </div>\\n    </ng-container>\\n    <div class=\\\"card elem\\\">\\n      <div class=\\\"card-header text-white\\\">\\n        Jobinformationen\\n      </div>\\n      <ng-container *ngIf=\\\"recommendResult != null\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Durchschnittl. Gehalt</h5>\\n          <p class=\\\"card-text\\\">\\n            {{ recommendResult.jobInfo.salary }}\\n          </p>\\n          <h5 class=\\\"card-title\\\">Arbeit & Freizeit: </h5>\\n          <p class=\\\"card-text\\\">\\n            {{ recommendResult.jobInfo.balance }}\\n          </p>\\n          <h5 class=\\\"card-title\\\"> Generelle Bewertung: </h5>\\n          <ng-container *ngFor=\\\"let review of recommendResult.jobInfo.reviews\\\">\\n            <p class=\\\"card-text\\\">\\n              {{ review }}\\n            </p>\\n          </ng-container>\\n        </div>\\n      </ng-container>\\n    </div>\\n  </div>\\n</ng-container>\"","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AreaService } from '../area.service';\nimport { CourseInfo, CourseNode } from '../course-node';\nimport { UserData } from '../user-data';\nimport { RecommendResult } from '../recommend-result';\n\n@Component({\n  selector: 'app-edu-side-panel',\n  templateUrl: './edu-side-panel.component.html',\n  styleUrls: ['./edu-side-panel.component.css']\n})\nexport class EduSidePanelComponent implements OnInit,OnChanges {\n  @Output('selectedJobIndex') selectedJobIndexEmitter: EventEmitter<number> = new EventEmitter();\n\n  @Input() selectedCourseNode: CourseNode;\n  @Input() recommendResults: RecommendResult[] = [];\n  @Input() isDetailMode: boolean;\n  recommendResult: RecommendResult = null;\n\n  areas: string[];\n  selectedArea: string;\n  opened = false;\n\n  constructor(private areaService: AreaService) {\n    this.areas = areaService.AREAS;\n  }\n\n  ngOnInit() {\n    this.areaService.areaObservable.subscribe(area => {\n      this.selectedArea = area;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['recommenResults'] && !changes['recommendResults'].isFirstChange()) {\n      this.recommendResult = this.recommendResults[0];\n    }\n\n  }\n\n  toggle() {\n    this.opened = !this.opened;\n  }\n\n  onClickArea(area: string) {\n    this.areaService.changeCurrentArea(area);\n  }\n\n  changeCurrentJobIndex(index: number) {\n    this.selectedJobIndexEmitter.emit(index);\n    this.recommendResult = this.recommendResults[index];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CourseNode, CourseInfo } from './course-node';\nimport { Constants } from './constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EduStructureService {\n\n  currentArea = 'Berlin';\n  courseNodes: CourseNode[][] = [\n    [\n    new CourseNode(0, Constants.COURSE_KINDERGARTEN, 3, 5, new CourseInfo('• Elementarstufe des Bildungssystems •\tBetreuung, Bildung und Erziehung der Kinder','', ''))\n    ],\n    [\n    new CourseNode(1, Constants.COURSE_GRUNDSCHULE, 6, 11, new CourseInfo('• Bildung des Fundaments für weiterführende Schulbildung (Gymnasium, Real-, Haupt- und Gesamtschule) durch Vermittlung grundlegender Lern- und Arbeitsformen, mathematische, sprachliche und sachunterrichtliche Kenntnisse ','', ''))\n    ],\n    [\n    new CourseNode(2, Constants.COURSE_GYMNASIUM, 12, 18, new CourseInfo('','•\tMittlere Reife (nach 10. Klasse) •\tHauptschulabschluss (nach 9. Klasse)', 'nahtloser Übergang zur gymnasialen Oberstufe •\tFachoberschulreife (nach 11. Klasse) -> häufig muss praktischer Teil (Praktikum) nachgeholt werden •\tAllgemeine Hochschulreife (Abitur) (nach 12. Klasse) Oder Berechtigung zum Besuch von Schulformen der Sekundarstufe II z. B Fachoberschule und Berufskolleg oder Lehre/Ausbildung ')),\n    new CourseNode(2, Constants.COURSE_GEASAMTSCHULE, 12, 18, new CourseInfo('','•\tMittlere Reife (nach 10. Klasse), Hauptschulabschluss (nach 9. Klasse)', '•\tnahtloser Übergang zur gymnasialen Oberstufe, •\tBerechtigung zum Besuch von Schulformen der Sekundarstufe II z. B Fachoberschule und Berufskolleg oder Lehre/Ausbildung ')),\n    new CourseNode(2, Constants.COURSE_REALSCHULE, 12, 18, new CourseInfo('', '•\tMittlere Reife (nach 10. Klasse), •\tHauptschulabschluss (nach 9. Klasse)','Berechtigung zum Besuch von Schulformen der Sekundarstufe II z. B Fachoberschule, Berufskolleg, gymnasiale Oberstufe (mittels Qualifikation) oder Lehre/Ausbildung ')),\n    new CourseNode(2, Constants.COURSE_HAUPTSCHULE, 12, 18, new CourseInfo('', '•\tMittlere Reife (nach 10. Klasse), •\tHauptschulabschluss (nach 9. Klasse)','Berechtigung zum Besuch von Schulformen der Sekundarstufe II z. B Fachoberschule, Berufskolleg, gymnasiale Oberstufe (mittels Qualifikation) oder Lehre/Ausbildung '))\n    ],\n    [\n    new CourseNode(3, Constants.COURSE_GYMNASIALE, 19, 21, new CourseInfo('', '•\tFachoberschulreife (nach 11. Klasse) -> häufig muss praktischer Teil (Praktikum) nachgeholt werden, •\tAllgemeine Hochschulreife (Abitur) (nach 12. Klasse)','Berechtigung zum Besuch der Universität und gleichwertigen Institutionen ')),\n    new CourseNode(3, Constants.COURSE_BERUFSOBERSCHULE, 19, 21, new CourseInfo('', '•\tFachoberschulreife (nach 11. Klasse), •\tAllgemeine Hochschulreife (Abitur) (nach 12. Klasse)','Berechtigung zum Besuch der Universität und gleichwertigen Institutionen ')),\n    new CourseNode(3, Constants.COURSE_FACHOBERSCHULE, 19, 21, new CourseInfo('', '•\tFachoberschulreife (nach 12. Klasse), •\tAllgemeine Hochschulreife (Abitur) (nach 13. Klasse)','Berechtigung zum Besuch der Universität und gleichwertigen Institutionen wie Fachhochschulen')),\n    new CourseNode(3, Constants.COURSE_BEFURSFACHSCHULE, 19, 21, new CourseInfo('', '•\tBerufsschulabschluss','Weiterbildung oder Berechtigung zum Besuch mancher Universitäten möglich')),\n    new CourseNode(3, Constants.COURSE_BETRIEB, 19, 21, new CourseInfo('', '•\tBerufsschulabschluss','Weiterbildung oder Berechtigung zum Besuch mancher Universitäten möglich'))\n    ],\n    [\n    new CourseNode(4, Constants.COURSE_UNIVERSITAT, 22, 25, new CourseInfo('','•\tBachelor-, •\tMasterabschluss, •\tDoktor (Weiterbildung) (derzeitig nur an Universitäten möglich)', '•\tEinstieg in den Beruf, •\tTätigkeit in die Forschung, •\tWeiterbildung')),\n    new CourseNode(4, Constants.COURSE_BERUFSAKADEMIE, 22, 25, new CourseInfo('', '•\tDiplom- (jeweilige Studiengang) oder Bachelor','•\tMaster-Abschluss an einer Universität oder einer Fachhochschule, •\tEinstieg in den Beruf, •\tWeiterbildung ')),\n    new CourseNode(4, Constants.COURSE_FACHHOCH, 22, 25, new CourseInfo('', '•\tBachelor, •\tund Masterabschluss','Einstieg in den Beruf oder Weiterbildung'))\n    ],\n    [\n    new CourseNode(5, Constants.COURSE_WEITERBILDUNG, 26, 28, new CourseInfo('Vertiefung und Erweiterung der vorhandenen beruflichen Vorbildung Fachliche Ausrichtung bisher weiter vertieft oder Fortbildung im eigenen Fach: Erweiterung vorhandenen Wissens bzw. Kompetenzen Formen der beruflichen Weiterbildung: Ärztliche Weiterbildung, APO-IT, Ph. D., Habilitation, Verwaltungs- und Wirtschaftsakademie, Meisterprüfung, Staatlich geprüfter Betriebswirt, staatlich geprüfter Gestalter im Handwerk, Staatlich geprüfter Restaurator im Handwerk, Staatlich geprüfter Techniker, Corporate University, Betriebsinformatiker, Lerninseln, Weiterbildende, nicht-konsekutive Master¬studiengänge', '',''))\n    ]\n  ];\n\n  constructor() {\n\n  }\n\n  applyArea(area: string) {\n    if (this.currentArea == 'Berlin' && this.currentArea != area) {\n      this.courseNodes[2].forEach(node => node.toAge -= 2);\n      for (let i = 3; i < this.courseNodes.length; i++) {\n        this.courseNodes[i].forEach(node => node.fromAge -= 2);\n        this.courseNodes[i].forEach(node => node.toAge -= 2);\n      }\n    }\n\n    if (this.currentArea != 'Berlin' && area == 'Berlin') {\n      this.courseNodes[2].forEach(node => node.toAge += 2);\n      for (let i = 3; i < this.courseNodes.length; i++) {\n        this.courseNodes[i].forEach(node => node.fromAge += 2);\n        this.courseNodes[i].forEach(node => node.toAge += 2);\n      }\n    }\n\n    this.currentArea = area;\n  }\n\n\n}\n","import { LayoutManager } from \"./layout-manager\";\nimport { CareerPath, CareerSubPath } from \"../recommend-result\";\n\nexport class CourseLink {\n\n  public isPrev: boolean = false;\n  constructor(public subPath: CareerSubPath, public layoutManager: LayoutManager, public detailIndex: number) {\n    this.isPrev = subPath.isPrev;\n  }\n\n  getPath() {\n    let rects = this.layoutManager.rects;\n\n    let fromRect = rects.find(rect => rect.courseNode.name == this.subPath.from)\n    let toRect = rects.find(rect => rect.courseNode.name == this.subPath.to)\n    let sourceX = fromRect.getStartPos()[0];\n    let sourceY = fromRect.getStartPos()[1];\n    let targetX = toRect.getEndPos()[0];\n    let targetY = toRect.getEndPos()[1];\n    return \"M\" + sourceX + \",\" + sourceY\n    + \"C\" + sourceX +  \",\" + (sourceY + targetY) / 2\n    + \" \" + targetX + \",\" + (sourceY + targetY) / 2\n    + \" \" + targetX + \",\" + targetY;\n  }\n\n  getArrowId(index: number) {\n    return 'url(#arrow_' + index + ')';\n  }\n}\n","export class Layer {\n  constructor(public from: number, public to: number, public colCount: number) {\n  }\n}\n","import { Layer } from \"./layer\";\nimport { Rect } from \"./rect\";\nimport { CourseNode } from \"../course-node\";\nimport { D3Service } from \"../d3.service\";\nimport { AppComponent } from \"../app.component\";\n\nimport * as _ from 'underscore';\nimport { CareerPath } from \"../recommend-result\";\n\nexport class LayoutManager {\n\n  public rects: Rect[] = [];\n  private isBerlin: Boolean;\n  private layers: Layer[];\n  private selectedCourseNodes: CourseNode[][] = [];\n\n  constructor(public courseNodes: CourseNode[][]) {\n    this.generateRects();\n  }\n\n  generateRects() {\n    this.layers = [];\n    this.courseNodes.forEach(arr => {\n      let minAge = Math.min.apply(null, arr.map(node => node.fromAge));\n      let maxAge = Math.max.apply(null, arr.map(node => node.toAge));\n      this.layers.push(new Layer(minAge - 3, maxAge - 2, arr.length));\n    });\n\n    this.rects = [];\n    this.courseNodes.forEach((arr, index) => {\n      let layer = this.layers[index];\n      arr.forEach((node, i) => {\n        this.rects.push(new Rect(node, layer, i));\n      });\n    });\n  }\n\n  updateRects(isDetailMode: boolean) {\n    let currCourseNodes = isDetailMode ? this.selectedCourseNodes : this.courseNodes;\n    this.layers = [];\n    currCourseNodes.forEach(arr => {\n      let minAge = Math.min.apply(null, arr.map(node => node.fromAge));\n      let maxAge = Math.max.apply(null, arr.map(node => node.toAge));\n      this.layers.push(new Layer(minAge - 3, maxAge - 2, arr.length));\n    });\n\n    let courseIndex = 0;\n    currCourseNodes.forEach((arr, index) => {\n      let layer = this.layers[index];\n      arr.forEach((node, i) => {\n        this.rects[courseIndex++].updateRect(layer, i, isDetailMode);\n      });\n    });\n  }\n\n  trimRects(careerPath: CareerPath) {\n    this.selectedCourseNodes = [];\n    let courseNames = new Set([]);\n    careerPath.paths.forEach(path => {\n      courseNames.add(path.from);\n      courseNames.add(path.to);\n    });\n\n    this.courseNodes.forEach((arr, index)=> {\n      this.selectedCourseNodes.push([]);\n      arr.forEach(node => {\n        if (courseNames.has(node.name)) {\n          this.selectedCourseNodes[index].push(node);\n        }\n      })\n    });\n\n    this.layers = [];\n    this.selectedCourseNodes.forEach(arr => {\n      let minAge = Math.min.apply(null, arr.map(node => node.fromAge));\n      let maxAge = Math.max.apply(null, arr.map(node => node.toAge));\n      this.layers.push(new Layer(minAge - 3, maxAge - 2, arr.length));\n    });\n\n    this.rects = this.rects.filter(rect => courseNames.has(rect.courseNode.name));\n    console.log(this.rects);\n    let courseIndex = 0;\n    this.selectedCourseNodes.forEach((arr, index) => {\n      let layer = this.layers[index];\n      arr.forEach((node, i) => {\n        this.rects[courseIndex++].updateRect(layer, i, true);\n      });\n    });\n  }\n}\n","import { D3Service } from \"../d3.service\";\nimport { Layer } from \"./layer\";\nimport { Constants } from \"../constants\";\nimport { CourseNode } from \"../course-node\";\n\nexport class Rect {\n  public x: number;\n  public y: number;\n  public width: number;\n  public height: number;\n  constructor(public courseNode: CourseNode, private layer: Layer, private index: number) {\n    let graphWidth = Constants.GRAPH_WIDTH - Constants.GRAPH_MARGIN_SIDE * 2;\n    let rectWidth = graphWidth / layer.colCount * 0.7;\n    let rectOffset = (graphWidth - rectWidth * layer.colCount) / (layer.colCount + 1);\n    let rectHeight = (layer.to - layer.from) * 25;\n    this.x = index * (rectWidth + rectOffset) + rectOffset\n    this.y = Constants.GRAPH_HEIGHT - layer.from * 25\n    this.width = rectWidth\n    this.height = rectHeight;\n  }\n\n  getStartPos(): number[] {\n    return [Math.floor(this.x + this.width / 2), Math.floor(this.y - this.height * 0.71)];\n  }\n\n  getEndPos(): number[] {\n    return [Math.floor(this.x + this.width / 2), Math.floor(this.y - this.height * 0.31)];\n  }\n\n  updateRect(layer, index, isDetailMode) {\n    if (isDetailMode) {\n      this.updateInDetailMode(layer);\n    } else {\n      this.updateInOverviewMode(layer, index);\n    }\n  }\n\n  private updateInOverviewMode(layer, index) {\n    let graphWidth = Constants.GRAPH_WIDTH - Constants.GRAPH_MARGIN_SIDE * 2;\n    let rectWidth = graphWidth / layer.colCount * 0.7;\n    let rectOffset = (graphWidth - rectWidth * layer.colCount) / (layer.colCount + 1);\n    let rectHeight = (layer.to - layer.from) * 25;\n    this.x = index * (rectWidth + rectOffset) + rectOffset\n    this.y = Constants.GRAPH_HEIGHT - layer.from * 25\n    this.width = rectWidth\n    this.height = rectHeight; \n  }\n\n  private updateInDetailMode(layer) {\n    let graphWidth = Constants.GRAPH_DETAIL_WIDTH - Constants.GRAPH_MARGIN_SIDE * 2;\n    let rectWidth = graphWidth / layer.colCount * 0.7;\n    let rectHeight = (layer.to - layer.from) * 25;\n    this.x = 50\n    this.y = Constants.GRAPH_HEIGHT - layer.from * 25\n    this.width = rectWidth\n    this.height = rectHeight; \n  }\n\n  changeDetailMode(layer) {\n\n  }\n}\n","module.exports = \"div {\\n  text-align: center;\\n  width: 100%;\\n}\\n#ground {\\n  position:relative;\\n  background: #eee;\\n}\\n#ground.detail-mode {\\n  width: 300px;\\n}\\n#svg-ground {\\n  position: relative;\\n  left: 0;\\n}\\n.edge {\\n  position: absolute;\\n}\\n.box {\\n  display: flex;\\n  position: absolute;\\n  justify-content: center;\\n  transition-duration: 0.4s;\\n  transition-property: left, top, width, height;\\n  transition-timing-function: linear;\\n}\\n.inner-box {\\n  display: flex;\\n  position: absolute;\\n  border: 1px solid #ddd;\\n  background: #fff;\\n  border-radius: 5px;\\n  box-sizing: border-box;\\n  box-shadow: 0px 0px 3px #ccc;\\n  align-items: center;\\n  width: 90%;\\n  height: 98%;\\n}\\n.inner-box.info-mode:hover {\\n  background-color: #447dd3;\\n}\\n.inner-box.detail-mode:hover {\\n  background-color: #447dd3;\\n}\\n.text-box {\\n  display: flex;\\n  position: absolute;\\n  border: 1px solid #888;\\n  border-radius: 5px;\\n  width: 100%;\\n  height: 40%;\\n  text-align: center;\\n  align-items: center;\\n  font-size: 0.7em;\\n  background-color: white;\\n}\\nline {\\n  stroke:black;\\n  stroke-width: 2px;\\n  transition: x2 0.3s;\\n}\\nsvg.info-mode {\\n  pointer-events: none;\\n}\\nsvg.detail-mode {\\n  pointer-events: none;\\n}\\n#select-path-panel {\\n  position: absolute;\\n  display: flex;\\n  left: 10px;\\n  top: 5px;\\n  align-items: center;\\n  justify-content: center;\\n  border: solid gray 1px;\\n  padding: 3px;\\n  border-radius: 3px;\\n  color: white;\\n  background: #447dd3;\\n  height: 40px;\\n  width: 80%;\\n}\\n#select-path-panel .btn.btn-light {\\n  margin-right: 20px;\\n  width: 140px;\\n  height: 30px;\\n  justify-content: center;\\n  padding: 0;\\n}\\n#select-path-panel p {\\n  margin-bottom: 0;\\n  margin-right: 15px;\\n  font-size: 1.1em;\\n  color: white;\\n}\\n#select-path-panel .btn.btn-light span {\\n  margin-bottom: 15px;\\n}\"","module.exports = \"<div id=\\\"ground\\\" [class.detail-mode]=\\\"isDetailMode\\\">\\n  <ng-container *ngFor=\\\"let box of layoutManager.rects\\\">\\n    <div [style.left.px]=\\\"box.x\\\" [style.top.px]=\\\"box.y - box.height\\\" [style.width.px]=\\\"box.width\\\" [style.height.px]=\\\"box.height\\\"\\n      class=\\\"box\\\">\\n      <div class=\\\"inner-box\\\" [class.info-mode]=\\\"recommendResult == null && !isDetailMode\\\" (click)=\\\"showInfo(box)\\\" [class.detail-mode]=\\\"isDetailMode\\\">\\n        <div class=\\\"text-box\\\">\\n          <div>\\n            {{ box.courseNode.name }}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n  <svg #svg id=\\\"svg-ground\\\" [class.info-mode]=\\\"recommendResult == null && !isDetailMode\\\" [class.detail-mode]=\\\"isDetailMode\\\"\\n    >\\n  </svg>\\n  <ng-container *ngIf=\\\"recommendResult != null && !isDetailMode\\\">\\n    <div id=\\\"select-path-panel\\\">\\n      <p>\\n        Wähle deinen Weg aus\\n      </p>  \\n      <ng-container *ngFor=\\\"let path of recommendResult.paths let i = index\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (mouseenter)=\\\"highlightPath(i)\\\" (click)=\\\"selectPath(i)\\\"> <span>{{path.name}}</span></button>\\n      </ng-container>\\n    </div>\\n  </ng-container>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef, Input, OnChanges, SimpleChanges, EventEmitter, Output } from '@angular/core';\nimport * as d3 from 'd3';\nimport { D3Service } from '../d3.service';\nimport { CourseLink } from '../graph/course-link';\nimport { LayoutManager } from '../graph/layout-manager';\nimport { AreaService } from '../area.service';\nimport { EduStructureService } from '../edu-structure.service';\nimport { UserData } from '../user-data';\nimport { RecommendService } from '../recommend.service';\nimport { CourseInfo, CourseNode } from '../course-node';\nimport { Rect } from '../graph/rect';\nimport { RecommendResult, CareerPath } from '../recommend-result';\nimport { Constants } from '../constants';\n\n@Component({\n  selector: 'app-main-graph',\n  templateUrl: './main-graph.component.html',\n  styleUrls: ['./main-graph.component.css']\n})\nexport class MainGraphComponent implements OnInit {\n\n  @Output('courseNode') courseNodeEmitter: EventEmitter<CourseNode> = new EventEmitter();\n  @Output('isDetailMode') detailModeEmitter: EventEmitter<boolean> = new EventEmitter();\n\n  @Input() recommendResult: RecommendResult;\n  @Input() isDetailMode: boolean;\n\n  @ViewChild('svg') svg: ElementRef;\n  layoutManager: LayoutManager;\n\n  constructor (public d3Service: D3Service, \n    private areaService: AreaService, \n    private eduService: EduStructureService) {\n  }\n\n  ngOnInit() {\n    this.layoutManager = this.d3Service.layoutManager;\n    this.d3Service.applySVG(this.svg, Constants.GRAPH_WIDTH, Constants.GRAPH_HEIGHT);\n    this.d3Service.initYAxis();\n\n    this.areaService.areaObservable.subscribe(area => {\n      this.eduService.applyArea(area);\n      this.layoutManager.updateRects(this.isDetailMode);\n      this.d3Service.updateLinks();\n    })\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (let change in changes) {\n      if (change == 'recommendResult' && changes[change].currentValue != changes[change].previousValue) {\n        this.d3Service.deleteLinks();\n        this.d3Service.initLinks(this.recommendResult.paths);\n      }\n\n      if (change == 'isDetailMode' && changes[change].currentValue == false && !changes[change].isFirstChange()) {\n        this.d3Service.changeOverviewMode(this.recommendResult.paths);\n      }\n    }\n  }\n\n  showInfo(selectedRect: Rect) {\n    if (this.recommendResult == null) {\n      this.courseNodeEmitter.emit(selectedRect.courseNode);\n    }\n    if (this.isDetailMode) {\n      this.courseNodeEmitter.emit(selectedRect.courseNode);\n    }\n  }\n\n  selectPath(index: number) {\n    this.detailModeEmitter.emit(true);\n    this.d3Service.changeDetailMode(this.recommendResult, index);\n  }\n\n  highlightPath(index: number) {\n    this.d3Service.highlightLinks(index);\n  }\n\n}\n","export class MajorInfo {\n  static NONE: MajorInfo = {name: 'none', description: '', learningEffort: '', ncValue: 0};\n  name: string;\n  description: string;\n  learningEffort: string;\n  ncValue: number;\n}","module.exports = \"#map-ground {\\n  width: 100%;\\n  margin: 50px;\\n  height: 400px;\\n  float: left;\\n}\\n\\n#gmap {\\n  width: 45%;\\n  height: 400px;\\n  float: left;\\n}\\n\\n.card-header {\\n  background: #447dd3;\\n  color: white;\\n}\\n\\n#map-panel {\\n  width:40%; \\n  height:400px;\\n  float: left;\\n}\\n\\n#detail-panel {\\n  width: 40%;\\n  float: left;\\n  margin-left: 40px;\\n}\\n\\n#detail-content {\\n  height: 350px;\\n  overflow: scroll;\\n  border: 1px gray solid;\\n  border-radius: 5px;\\n}\\n\\n\"","module.exports = \"<div id=\\\"map-ground\\\">\\n  <div #gmap id=\\\"map-panel\\\">\\n\\n  </div>\\n  <div id=\\\"detail-panel\\\">\\n    <div class=\\\"card-header text-white\\\">\\n      Informationen über die Institution\\n    </div>\\n    <div class=\\\"card-body\\\" id=\\\"detail-content\\\">\\n      <ng-container *ngIf=\\\"selectedSchoolInfo == null\\\">\\n        <h4 class=\\\"card-title\\\">Wähle deine bevorzugte Bildungsinstitution aus</h4>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"selectedSchoolInfo\\\">\\n        <h5 class=\\\"card-title\\\">{{selectedSchoolInfo.name}}</h5>\\n        <p class=\\\"card-text\\\">\\n            Entfernung: {{distance}} km\\n        </p>\\n        <h5 class=\\\"card-title\\\">Zugangsvoraussetzungen</h5>\\n        <ul>\\n          <ng-container *ngFor=\\\"let qualification of selectedSchoolInfo.qualifications\\\">\\n            <li class=\\\"card-text\\\">\\n              {{ qualification }}\\n            </li>\\n          </ng-container>\\n        </ul>\\n        <h5 class=\\\"card-title\\\">Curriculum</h5>\\n        <ul>\\n          <ng-container *ngFor=\\\"let curriculum of selectedSchoolInfo.curriculums\\\">\\n            <li class=\\\"card-text\\\">\\n              {{ curriculum }}\\n            </li>\\n          </ng-container>\\n        </ul>\\n        <h5 class=\\\"card-title\\\">Bewertung</h5>\\n        <ul>\\n          <ng-container *ngFor=\\\"let review of selectedSchoolInfo.reviews\\\">\\n            <li class=\\\"card-text\\\">\\n              {{ review }}\\n            </li>\\n          </ng-container>\\n        </ul>\\n      </ng-container>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\nimport { SchoolInfo } from '../school-info';\nimport { UserData } from '../user-data';\nimport { LatLng, AreaService } from '../area.service';\nimport { } from '@types/googlemaps';\nimport { markParentViewsForCheck } from '@angular/core/src/view/util';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-map-view',\n  templateUrl: './map-view.component.html',\n  styleUrls: ['./map-view.component.css']\n})\nexport class MapViewComponent implements OnInit, OnChanges {\n\n  @Input() schoolInfos: SchoolInfo[];\n  @Input() userData: UserData;\n\n  @ViewChild('gmap') gmapElement: any;\n  map: google.maps.Map;\n  homeMarker: google.maps.Marker;\n  schoolMarkers: google.maps.Marker[] = [];\n  selectedSchoolInfo: SchoolInfo;\n  distance: string;\n  \n  currAreaLatLng: LatLng;\n  constructor(private areaService: AreaService) { \n\n  }\n\n  ngOnInit() {\n    this.currAreaLatLng = this.areaService.getCurrAreaLntLng();\n    console.log(this.currAreaLatLng);\n    this.initGoogleMap();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes['schoolInfos'].isFirstChange()) {\n      this.currAreaLatLng = this.areaService.getCurrAreaLntLng();\n      this.setOnMarkers(null);\n      this.schoolMarkers = [];\n      this.updateGoogleMap();\n    }\n  }\n\n  initGoogleMap() {\n    var mapProp = {\n      center: this.currAreaLatLng,\n      zoom: 15,\n    };\n    this.map = new google.maps.Map(this.gmapElement.nativeElement, mapProp);\n    google.maps.event.addListenerOnce(this.map, 'tilesloaded', () => {\n      this.addUserHomeMarker(this.map);\n    })\n  }\n\n  updateGoogleMap() {\n    this.homeMarker.setMap(this.map);\n    var bounds = new google.maps.LatLngBounds();\n    bounds.extend(this.homeMarker.getPosition());\n    this.schoolInfos.forEach(schoolInfo => {\n      var marker = new google.maps.Marker({\n        map: this.map,\n        position: schoolInfo.latlng,\n        animation: google.maps.Animation.DROP,\n        icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n      });\n      bounds.extend(schoolInfo.latlng);\n      marker.addListener('click', () => {\n        this.selectedSchoolInfo = schoolInfo;\n        let tempLatLng = new google.maps.LatLng(schoolInfo.latlng.lat, schoolInfo.latlng.lng);\n        this.distance = (google.maps.geometry.spherical.computeDistanceBetween (tempLatLng, this.homeMarker.getPosition()) / 1000).toFixed(2);\n\n      });\n      this.schoolMarkers.push(marker);\n      this.map.fitBounds(bounds);\n      this.map.panToBounds(bounds);\n    });\n    $(\"html, body\").animate({scrollTop: 600}, 400);\n    //this.gmapElement.nativeElement.scrollIntoView({bahavior: 'smooth'});\n  }\n\n  addUserHomeMarker(map: google.maps.Map) {\n    var geocoder = new google.maps.Geocoder();\n    //this.userData.address = 'Geeststraße 75, 40589 Düsseldorf'\n    var address = this.userData.address;\n    var marker = new google.maps.Marker();\n    geocoder.geocode( { 'address': address}, function(results, status) {\n      if (status == google.maps.GeocoderStatus.OK) {\n        map.setCenter(results[0].geometry.location);\n        marker.setPosition(results[0].geometry.location);\n        marker.setMap(map);\n        marker.setAnimation(google.maps.Animation.DROP);\n      } else {\n        alert('Geocode was not successful for the following reason: ' + status);\n      }\n    });\n    this.homeMarker = marker;\n    console.log(this.homeMarker);\n  }\n\n  setOnMarkers(map) {\n    this.homeMarker.setMap(map);\n    this.schoolMarkers.forEach(marker => marker.setMap(map));\n  }\n\n  rad (x) {\n    return x * Math.PI / 180;\n  };\n  \n  getDistance (p1, p2) {\n    var R = 6378137; // Earth’s mean radius in meter\n    var dLat = this.rad(p2.lat - p1.lat);\n    var dLong = this.rad(p2.lng - p1.lng);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(this.rad(p1.lat)) * Math.cos(this.rad(p2.lat)) *\n      Math.sin(dLong / 2) * Math.sin(dLong / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c;\n    return d / 1000; // returns the distance in meter\n  };\n\n}\n","import { JobInfo } from \"./job-info\";\nimport { CourseLink } from \"./graph/course-link\";\n\nexport class RecommendResult {\n\n  constructor(public jobInfo: JobInfo, public paths: CareerPath[]) {\n\n  }\n}\n\nexport class CareerPath {\n  name: string;\n  paths: CareerSubPath[];\n}\n\nexport class CareerSubPath {\n  from: string;\n  to: string;\n  isPrev: boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { UserData } from './user-data';\nimport { RecommendResult } from './recommend-result';\nimport { CourseLink } from './graph/course-link';\nimport { Constants } from './constants';\nimport { CourseNode } from './course-node';\nimport { MajorInfo } from './major-info';\nimport { SchoolInfo } from './school-info';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecommendService {\n\n  constructor() { }\n\n  getRecommendResult(userData: UserData): RecommendResult[] {\n    return [\n      new RecommendResult({\n        name: 'Polizist/in im gehobenen Dienst',\n        salary: 'bis zu 54000€/Jahr',\n        balance: 'wenig Freizeit',\n        reviews: [\n          'überdurchschnittliches Gehalt',\n          'Unkündbar, krisensicher',\n          'automatische Beförderungen möglich',\n          'alle Versicherungen günstiger',\n          'alle Kredite günstiger',\n          'wenn Du nicht gerade auf der',\n          'stationiert bist, nach den ersten Jahren einarbeiten folgt ein lockerer Job',\n          'Frühverrentung sehr einfach möglich Ich habe sehr viel Freude und Spaß bei diesem Job.'\n        ]\n      }, [\n          {\n            name: 'Primär',\n            paths: [\n              {\n                from: Constants.COURSE_KINDERGARTEN,\n                to: Constants.COURSE_GRUNDSCHULE,\n                isPrev: true\n              },\n              {\n                from: Constants.COURSE_GRUNDSCHULE,\n                to: Constants.COURSE_GYMNASIUM,\n                isPrev: true\n              },\n              {\n                from: Constants.COURSE_GYMNASIUM,\n                to: Constants.COURSE_GYMNASIALE,\n                isPrev: false\n              },\n              {\n                from: Constants.COURSE_GYMNASIALE,\n                to: Constants.COURSE_UNIVERSITAT,\n                isPrev: false\n              },\n              {\n                from: Constants.COURSE_UNIVERSITAT,\n                to: Constants.COURSE_WEITERBILDUNG,\n                isPrev: false\n              }\n            ]\n          },\n          {\n            name: 'Alternative Wege',\n            paths: [\n              {\n                from: Constants.COURSE_KINDERGARTEN,\n                to: Constants.COURSE_GRUNDSCHULE,\n                isPrev: true\n              },\n              {\n                from: Constants.COURSE_GRUNDSCHULE,\n                to: Constants.COURSE_GYMNASIUM,\n                isPrev: true\n              },\n              {\n                from: Constants.COURSE_GYMNASIUM,\n                to: Constants.COURSE_FACHOBERSCHULE,\n                isPrev: false\n              },\n              {\n                from: Constants.COURSE_FACHOBERSCHULE,\n                to: Constants.COURSE_FACHHOCH,\n                isPrev: false\n              },\n              {\n                from: Constants.COURSE_FACHHOCH,\n                to: Constants.COURSE_WEITERBILDUNG,\n                isPrev: false\n              }\n            ]\n          }\n        ]),\n      new RecommendResult(\n        {\n          name: 'Sportpädagoge/Sportpädagogin:',\n          salary: 'bis zu 31.200 €/Jahr (Berufsanfänger) im späteren Verlauf 3.800 €/monatlich oder höher möglich',\n          balance: 'guter Ausgleich zwischen Arbeit und Freizeit, Generelle Bewertung: Der Beruf als Sportspädagoge ist sehr vielfältig. Arbeitsplätze finden sich in Schulen, Universitäten, Sportstudios, Vereine oder Verbänden (vorwiegend gemeinnützige Einrichtungen). Darüber hinaus sind die Tätigkeiten eines Sportpädagogen sehr vielfältig. ',\n          reviews: [\n            'Der Beruf als Sportspädagoge ist sehr vielfältig. Arbeitsplätze finden sich in Schulen, Universitäten, Sportstudios, Vereine oder Verbänden (vorwiegend gemeinnützige Einrichtungen). Darüber hinaus sind die Tätigkeiten eines Sportpädagogen sehr vielfältig.',\n            'Mögliche Tätigkeiten:',\n            '• Durchführen von Sportunterricht',\n            '• Gesundheitlicher Sport/medizinische Vorbeugung von Erkrankungen durch Sport',\n            'Sportpädagogik mit Behinderten und schwer erziehbaren Kindern Die Tätigkeit als Sportpädagoge bereitet mir jeden Tag viel Freude und Spaß. Ich habe die Möglichkeit, das Potenzial meiner Teilnehmer zu entfalten, sie zu motivieren, und ich kann ihnen die Freude an der Bewegung vermitteln.',\n          ]\n        },\n        [\n          {\n            name: 'Primär',\n            paths: [\n              {\n                from: Constants.COURSE_KINDERGARTEN,\n                to: Constants.COURSE_GRUNDSCHULE,\n                isPrev: true\n              },\n              {\n                from: Constants.COURSE_GRUNDSCHULE,\n                to: Constants.COURSE_GYMNASIUM,\n                isPrev: true\n              },\n              {\n                from: Constants.COURSE_GYMNASIUM,\n                to: Constants.COURSE_GYMNASIALE,\n                isPrev: false\n              },\n              {\n                from: Constants.COURSE_GYMNASIALE,\n                to: Constants.COURSE_UNIVERSITAT,\n                isPrev: false\n              },\n              {\n                from: Constants.COURSE_UNIVERSITAT,\n                to: Constants.COURSE_WEITERBILDUNG,\n                isPrev: false\n              }\n            ]\n          },\n          {\n            name: 'Alternative Wege',\n            paths: [\n              {\n                from: Constants.COURSE_KINDERGARTEN,\n                to: Constants.COURSE_GRUNDSCHULE,\n                isPrev: true\n              },\n              {\n                from: Constants.COURSE_GRUNDSCHULE,\n                to: Constants.COURSE_GYMNASIUM,\n                isPrev: true\n              },\n              {\n                from: Constants.COURSE_GYMNASIUM,\n                to: Constants.COURSE_BERUFSOBERSCHULE,\n                isPrev: false\n              },\n              {\n                from: Constants.COURSE_BERUFSOBERSCHULE,\n                to: Constants.COURSE_UNIVERSITAT,\n                isPrev: false\n              },\n              {\n                from: Constants.COURSE_UNIVERSITAT,\n                to: Constants.COURSE_WEITERBILDUNG,\n                isPrev: false\n              }\n            ]\n          }\n        ])\n    ]\n  }\n\n  getMajorInfos(courseNode: CourseNode, recommendResult: RecommendResult): MajorInfo[] {\n    if (recommendResult.jobInfo.name = 'Polizist/in im gehobenen Dienst') {\n      return [\n        {\n          name: 'Sportwissenschaften:',\n          description: 'Das Bachelorstudium Sportwissenschaft vermittelt breites und integriertes Grundlagenwissen des Faches. Die Studierenden erwerben ein kritisches Verständnis wichtiger Theorien, Prinzipien und Methoden mit einem besonderen Profil im Bereich \"Sport, Bewegung und Bildung\". Ziel des sportwissenschaftlichen Studiums ist es, Expertinnen und Experten im Feld Sport, Bewegung und Bildung auszubilden, die in unterschiedlichen bildungsbezogenen Settings Sport- und Bewegungsangebote entwickeln, planen, durchführen, bewerten und evaluieren können.',\n          learningEffort: '67%',\n          ncValue: 1.9\n        }\n      ]\n    } else {\n      return [\n        {\n          name: 'Polizist im gehobenen Dienst:',\n          description: 'Der Fachbereich Polizei der Hochschule für den öffentlichen Dienst in Bayern bietet das Studium zum Einstieg in die Ämter der 3. Qualifikationsebene (3. QE, früher gehobener Dienst) und in die Ämter der vierten Qualifikationsebene (4. QE, früher höherer Dienst), den Masterstudiengang \"Öffentliche Verwaltung - Polizeimanagement\", an. (allgemeine Info)',\n          learningEffort: '88%',\n          ncValue: 3.2\n        }\n      ]\n    }\n  }\n\n  getSchoolInfos(courseNode: CourseNode, recommendResult: RecommendResult): SchoolInfo[] {\n\n    if (recommendResult.jobInfo.name = 'Polizist/in im gehobenen Dienst') {\n      return [\n        {\n          name: 'Geeststraße 75, 40589 Düsseldorf',\n          latlng: { lat: 53.489, lng: 13.397 },\n          commuteTime: 80,\n          learningEffort: '180 ECTS',\n          qualifications: [\n            'Sportpraktische Affinität und Sporteignung: Nachweis von insgesamt mindestens 33 Notenpunkten im Unterrichtsfach Sport aus 3 Halbjahren der letzten vier Halbjahre des Abiturs (Qualifikationsphase) bzw. entsprechende schulische Leistungen auf einem vergleichbaren Qualifikationsniveau. Bei Belegung des Faches Sport als Leistungskurs genügt bereits ein Leistungsstand von insgesamt mindestens 30 Notenpunkten. Oder bestandener Sporteignungstest einer anderen Hochschule',\n            'Sporttauglichkeit: ärztliches Attest (nicht älter als 1 Jahr)'\n          ],\n          curriculums: [\n            'https://www.hu-berlin.de/de/studium/beratung/angebot/sgb/sportmono'\n          ],\n          reviews: [\n            'Es lohnt sich an der HU Sportwissenschaft zu studieren. Das Institut besteht aus einem Team bestehend aus sympathischen, jungen und klugen Köpfen. Man lernt wahnsinnig viel über sportliche Themen wie alles rundum Bewegung, aber auch viel über Bildung und Lehrmethoden, was sehr spannend für mich gewesen war.',\n            'Lehrpersonal: 4/5'\n          ]\n        }\n      ];\n    } else {\n      return [\n        {\n          name: 'Akademie der Polizei Hamburg',\n          latlng: { lat: 52.101, lng: 12.72 },\n          commuteTime: 100,\n          learningEffort: '180 ECTS',\n          qualifications: [\n            'Allgemeine Hochschulreife',\n            'Fachhochschulreife',\n            'Das Höchstalter beträgt 34 Jahre bei Einstellung',\n            'die Mindestkörpergröße beträgt 160 cm',\n            'keine sichtbaren Körpermodifikationen (z.B. Tätowierungen oder Flesh-Tunnel), die beim Tragen der Uniform (langärmeliges Diensthemd, Rundhalsausschnitt beim T-Shirt) sichtbar sind oder die eine besondere Eigengefährdung im polizeilichen Alltag begründen',\n            'Fahrerlaubnis der Klasse B muss spätestens zum Ende des Studiums vorliegen',\n            'Schwimmnachweis (Schwimmabzeichen in Bronze oder Jugendschwimmabzeichen in Bronze/Freischwimmer)',\n            'Polizeidiensttauglichkeit',\n            'Erfolgreiche Teilnahme am Einstellungsverfahren',\n            'Verfassungstreue'\n          ],\n          curriculums: [\n            'https://akademie-der-polizei.hamburg.de/contentblob/4334106/02c8819681e6f18a77774b5b96abd2ce/data/la-i-ausbildungs-und-pruefungsordnung.pdf'\n          ],\n          reviews: [\n            'Super interessant, nicht alltäglich. Viele neue Inhalte werden angeboten. Die Dozenten bereiten praxisrelevante Fälle vor und vermischen diese mit einigen Beispielen. Jeder ist bemüht die Studenten mitzuziehen und ausreichende Erklärung zu geben. Ein abwechslungsreiches Studium. Es lohnt sich an der HU Sportwissenschaft zu studieren. Das Institut besteht aus einem Team bestehend aus sympathischen, jungen und klugen Köpfen. Man lernt wahnsinnig viel über sportliche Themen wie alles rundum Bewegung, aber auch viel über Bildung und Lehrmethoden, was sehr spannend für mich gewesen war.',\n            'Lehrpersonal: 4/5'\n          ]\n        }\n      ];\n    }\n  }\n}\n","export class UserData {\n  currentGrade: number;\n  gpa: number;\n  address: string;\n  postalCode: string;\n  school: string;\n  major: string;\n  dreamJob: string;\n  studyLocation: string;\n  strongestSub: string;\n  desSalary: number;\n  interests: string[];\n  strengths: string[];\n\n}\n","module.exports = \"h2 {\\n  font-size: 1.5em;\\n}\\n.dark-modal .modal-content {\\n  background-color: #292b2c;\\n  color: white;\\n}\\n.dark-modal .close {\\n  color: white;\\n}\\n.light-blue-backdrop {\\n  background-color: #447dd3;\\n}\\n.open-btn {\\n  border-color: #447dd3;\\n  width: 300px;\\n  font-size: 0.9em;\\n  margin-top: 20px;\\n  margin-left: 10px;\\n  color: #447dd3;\\n}\\n.open-btn:hover {\\n  background-color: white;\\n  color: #898989;\\n\\n}\\n.modal-body {\\n  max-height: 650px;\\n  overflow: scroll;\\n}\\n.register-btn {\\n  pointer-events: none;\\n}\\n.register-btn.actived {\\n  pointer-events: all;\\n  background-color: #447dd3;\\n}\"","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\"> Benutzereingaben </h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12\\\">\\n                    <h2>Gib hier deine Daten ein:</h2>\\n                    <form action=\\\"\\\" method=\\\"\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"currentGrade\\\">Deine momentane Klasse</label>\\n                            <input [(ngModel)]=\\\"currentGrade\\\" class=\\\"form-control\\\" name=\\\"currentGrade\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"gpa\\\">Deine Durchschnittsnote</label>\\n                            <input [(ngModel)]=\\\"gpa\\\" class=\\\"form-control\\\" name=\\\"gpa\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"address\\\">Deine Adresse</label>\\n                            <input [(ngModel)]=\\\"address\\\" class=\\\"form-control\\\" name=\\\"address\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"postalcode\\\">Deine Postleitzahl</label>\\n                            <input [(ngModel)]=\\\"postalCode\\\" class=\\\"form-control\\\" name=\\\"postalCode\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"school\\\">Welche Art von Mittelschule hast du besucht (Gymnasium, Real-, Gesamt-, Hauptschule)?</label>\\n                            <input [(ngModel)]=\\\"school\\\" class=\\\"form-control\\\" name=\\\"school\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"major\\\">Bevorzugtes Studienfach (optional)</label>\\n                            <input [(ngModel)]=\\\"major\\\" class=\\\"form-control\\\" name=\\\"major\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"dreamjob\\\">Traumjob</label>\\n                            <input [(ngModel)]=\\\"dreamJob\\\" class=\\\"form-control\\\" name=\\\"dreamJob\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"studyLocation\\\">In welcher Klasse bist Du momentan?</label>\\n                            <input [(ngModel)]=\\\"studyLocation\\\" class=\\\"form-control\\\" name=\\\"studyLocation\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"strongestSub\\\">Dein bestes Fach</label>\\n                            <input [(ngModel)]=\\\"strongestSub\\\" class=\\\"form-control\\\" name=\\\"strongestSub\\\" />\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"desSalary\\\">Dein bevorzugtes Gehalt</label>\\n                            <input [(ngModel)]=\\\"desSalary\\\" class=\\\"form-control\\\" name=\\\"desSalary\\\" />\\n                        </div>\\n                        <h2>Was sind deine Interessen?\\n                            <span style=\\\"color:red\\\">(*Mehrfachauswahl möglich)</span>\\n                        </h2>\\n                        <div class=\\\"row\\\">\\n                            <ng-container *ngFor=\\\"let interest of interests\\\">\\n                                <div class=\\\"col-lg-6\\\">\\n                                    <div class=\\\"form-check\\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"check\\\" (click)=\\\"checkInterest(interest)\\\">\\n                                            <span class=\\\"label-text\\\">{{interest}}</span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </ng-container>\\n                        </div>\\n                        <h2>Was sind deine Stärken?\\n                            <span style=\\\"color:red\\\">(* Mehrfachauswahl möglich)</span>\\n                        </h2>\\n                        <div class=\\\"row\\\">\\n                            <ng-container *ngFor=\\\"let strength of strengths\\\">\\n                                <div class=\\\"col-lg-6\\\">\\n                                    <div class=\\\"form-check\\\">\\n                                        <label>\\n                                            <input type=\\\"checkbox\\\" name=\\\"check\\\" (click)=\\\"checkStrength(strength)\\\">\\n                                            <span class=\\\"label-text\\\">{{strength}}</span>\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                            </ng-container>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light register-btn\\\" [class.actived]=\\\"currentGrade && gpa && address\\n      && postalCode && school && major\\n      && dreamJob && studyLocation && strongestSub && desSalary\\n      && checkedInterests.length > 0 && checkedStrengths.length > 0\\\" (click)=\\\"registerUserInput()\\\">Abschicken</button>\\n      <!-- <button type=\\\"button\\\" class=\\\"btn btn-light register-btn\\\" [class.actived]=\\\"true\\\" (click)=\\\"registerUserInput()\\\">Register</button> -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"c('Close click')\\\">Schließen</button>\\n    </div>\\n</ng-template>\\n\\n<ng-container *ngIf=\\\"!isUserMode\\\">\\n    <button class=\\\"btn btn-outline-primary mb-2 mr-2 open-btn\\\" (click)=\\\"openModal(content)\\\">Gib deine Nutzereingaben bitte ein</button>\\n</ng-container>\"","import { Component, OnInit, Output, EventEmitter, Input} from '@angular/core';\nimport { NgbModal, ModalDismissReasons, NgbActiveModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { UserData } from '../user-data';\n\n@Component({\n  selector: 'app-user-modal',\n  templateUrl: './user-modal.component.html',\n  styleUrls: ['./user-modal.component.css']\n})\nexport class UserModalComponent implements OnInit {\n\n  @Output('userData') userDataEmitter: EventEmitter<UserData> = new EventEmitter();\n  modalRef: NgbModalRef;\n\n  @Input() isUserMode: boolean = false;\n\n  interests: string[] = [\n    'Produktion', 'BWL', 'Organisation', 'Sport', 'Musik', 'Kunst', 'Naturwissenschaften', 'Sprachen'\n  ];\n\n  strengths: string[] = [\n    'Leadership', 'Kreativität', 'athlethisch', 'Fleiß', 'Starkes Durchhaltevermögen', 'Starkes Durchsetzungsvermögen', 'Selbstständigkeit', 'Sorgfalt' ,\n    'Teamfähigkeit', 'Kommunikationsfähigkeit', 'Verantwortungsbewusstsein'\n  ]\n\n  currentGrade: number;\n  gpa: number;\n  address: string;\n  postalCode: string;\n  school: string;\n  major: string;\n  dreamJob: string;\n  studyLocation: string;\n  strongestSub: string;\n  desSalary: number;\n  checkedInterests: string[] = [];\n  checkedStrengths: string[] = [];\n\n\n\n  constructor(private modalService: NgbModal) { }\n\n  ngOnInit() {\n\n  }\n\n  openModal(content) {\n    this.modalRef = this.modalService.open(content, { size: 'lg', centered: true });\n  }\n\n  checkInterest(interest) {\n    var index = this.checkedInterests.indexOf(interest, 0);\n    if (index > -1) {\n      this.checkedInterests.splice(index, 1);\n    } else {\n      this.checkedInterests.push(interest);\n    }\n  }\n\n  checkStrength(strength) {\n    var index = this.checkedStrengths.indexOf(strength, 0);\n    if (index > -1) {\n      this.checkedStrengths.splice(index, 1);\n    } else {\n      this.checkedStrengths.push(strength);\n    }\n  }\n\n  registerUserInput() {\n    this.userDataEmitter.emit(\n      {\n        'currentGrade': this.currentGrade,\n        'gpa': this.gpa,\n        'address': this.address,\n        'postalCode': this.postalCode,\n        'school': this.school,\n        'major': this.major,\n        'dreamJob': this.dreamJob,\n        'studyLocation': this.studyLocation,\n        'strongestSub': this.strongestSub,\n        'desSalary': this.desSalary,\n        'interests': this.checkedInterests,\n        'strengths': this.checkedStrengths\n      }\n    );\n    this.modalRef.close();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}